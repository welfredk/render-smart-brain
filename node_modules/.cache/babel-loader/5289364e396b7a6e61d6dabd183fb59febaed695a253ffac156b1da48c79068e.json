{"ast":null,"code":"import React, { Component } from 'react';\nimport RAFManager from 'raf-manager';\nimport Proton from 'proton-engine';\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\nvar inherits = function (subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\nvar possibleConstructorReturn = function (self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\n// Code source from here, thanks author\n// https://github.com/drawcall/Proton/blob/gh-pages/source/src/utils/Rand.js\nvar Rand = function () {\n  function Rand() {\n    classCallCheck(this, Rand);\n    this.list = [];\n  }\n  createClass(Rand, [{\n    key: \"set\",\n    value: function set$$1(probability, target) {\n      this.list.push({\n        probability: probability,\n        target: target,\n        a: 0,\n        b: 1\n      });\n      this.calculation();\n    }\n  }, {\n    key: \"calculation\",\n    value: function calculation() {\n      var total = 0;\n      for (var i = 0; i < this.list.length; i++) {\n        total += this.list[i].probability;\n      }\n      for (var _i = 0; _i < this.list.length; _i++) {\n        var obj = this.list[_i];\n        var val = obj.probability / total;\n        obj.a = _i === 0 ? 0 : this.list[_i - 1].b;\n        obj.b = obj.a + val;\n      }\n    }\n  }, {\n    key: \"getResult\",\n    value: function getResult() {\n      var val = Math.random();\n      for (var i = 0; i < this.list.length; i++) {\n        var obj = this.list[i];\n        if (val <= obj.b && val > obj.a) {\n          return obj.target;\n        }\n      }\n      return this.list[0].target;\n    }\n  }]);\n  return Rand;\n}();\nvar Canvas = function (_React$Component) {\n  inherits(Canvas, _React$Component);\n  function Canvas(props) {\n    classCallCheck(this, Canvas);\n    var _this = possibleConstructorReturn(this, (Canvas.__proto__ || Object.getPrototypeOf(Canvas)).call(this, props));\n    _this._iid = 0;\n    _this._oid = 0;\n    _this.size = {\n      width: 0,\n      height: 0\n    };\n    _this.canvasRef = React.createRef();\n    return _this;\n  }\n  createClass(Canvas, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n      this._oid = setTimeout(function () {\n        _this2.initCanvas();\n        _this2.resize = _this2.resize.bind(_this2);\n        window.addEventListener(\"resize\", _this2.resize);\n      }, 100);\n      var canvas = this.getCanvas();\n      this.props.onCanvasDidMount && this.props.onCanvasDidMount(canvas);\n    }\n  }, {\n    key: \"initCanvas\",\n    value: function initCanvas() {\n      var canvas = this.getCanvas();\n      if (this.props.globalCompositeOperation) {\n        var context = canvas.getContext(\"2d\");\n        context.globalCompositeOperation = this.props.globalCompositeOperation;\n      }\n      var _setCanvasSize = this.setCanvasSize(canvas),\n        width = _setCanvasSize.width,\n        height = _setCanvasSize.height;\n      this.heartbeatDetectionCanvasSize(canvas);\n      this.props.onCanvasInited(canvas, width, height);\n    }\n  }, {\n    key: \"getCanvas\",\n    value: function getCanvas() {\n      var canvas = this.canvasRef.current;\n      return canvas;\n    }\n  }, {\n    key: \"heartbeatDetectionCanvasSize\",\n    value: function heartbeatDetectionCanvasSize(canvas) {\n      var _this3 = this;\n      this._iid = setInterval(function () {\n        if (_this3.canvasRef.current) {\n          var newHeight = _this3.canvasRef.current.clientHeight;\n          if (newHeight !== _this3.size.height) {\n            var _setCanvasSize2 = _this3.setCanvasSize(canvas),\n              width = _setCanvasSize2.width,\n              height = _setCanvasSize2.height;\n            _this3.props.onResize && _this3.props.onResize(width, height);\n          }\n        }\n      }, 1000 / 10);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      try {\n        window.removeEventListener(\"resize\", this.resize);\n        clearInterval(this._iid);\n        clearTimeout(this._oid);\n      } catch (e) {}\n    }\n  }, {\n    key: \"resize\",\n    value: function resize() {\n      var canvas = this.getCanvas();\n      var _setCanvasSize3 = this.setCanvasSize(canvas),\n        width = _setCanvasSize3.width,\n        height = _setCanvasSize3.height;\n      this.props.onResize && this.props.onResize(width, height);\n    }\n  }, {\n    key: \"setCanvasSize\",\n    value: function setCanvasSize(canvas) {\n      var width = this.canvasRef.current.clientWidth;\n      var height = this.canvasRef.current.clientHeight;\n      this.size.width = width;\n      this.size.height = height;\n      canvas.width = width;\n      canvas.height = height;\n      return {\n        width: width,\n        height: height\n      };\n    }\n  }, {\n    key: \"handleWaypointEnter\",\n    value: function handleWaypointEnter() {\n      RAFManager.start();\n    }\n  }, {\n    key: \"handleWaypointLeave\",\n    value: function handleWaypointLeave() {\n      RAFManager.stop();\n    }\n  }, {\n    key: \"getStyle\",\n    value: function getStyle() {\n      var bg = this.props.bg;\n      var style = {\n        width: \"100%\",\n        height: \"100%\"\n      };\n      if (bg === true) {\n        style = Object.assign(style, {\n          position: \"absolute\",\n          zIndex: -1,\n          top: 0,\n          left: 0\n        });\n      } else if (bg && (typeof bg === \"undefined\" ? \"undefined\" : _typeof(bg)) === \"object\") {\n        style = Object.assign(style, bg);\n      }\n      return style;\n    }\n  }, {\n    key: \"handleMouseDown\",\n    value: function handleMouseDown(e) {\n      this.props.onMouseDown && this.props.onMouseDown(e);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"canvas\", {\n        className: \"particles-bg-canvas-self\",\n        ref: this.canvasRef,\n        onMouseDown: this.handleMouseDown.bind(this),\n        style: this.getStyle()\n      });\n    }\n  }]);\n  return Canvas;\n}(React.Component);\nfunction hexToRgb(hex) {\n  var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n  return result ? {\n    r: parseInt(result[1], 16),\n    g: parseInt(result[2], 16),\n    b: parseInt(result[3], 16)\n  } : {};\n}\nfunction getColor(color, a) {\n  var c = void 0;\n  if (color) {\n    c = hexToRgb(color);\n    return \"rgba(\" + c.r + \",\" + c.g + \",\" + c.b + \", \" + a + \")\";\n  } else {\n    return null;\n  }\n}\nvar Ball = function (_React$Component) {\n  inherits(Ball, _React$Component);\n  function Ball(props) {\n    classCallCheck(this, Ball);\n    var _this = possibleConstructorReturn(this, (Ball.__proto__ || Object.getPrototypeOf(Ball)).call(this, props));\n    _this.renderProton = _this.renderProton.bind(_this);\n    return _this;\n  }\n  createClass(Ball, [{\n    key: \"onCanvasInited\",\n    value: function onCanvasInited(canvas, width, height) {\n      this.createProton(canvas, width, height);\n      this.createMiniEmitter(canvas);\n      RAFManager.add(this.renderProton);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      try {\n        RAFManager.remove(this.renderProton);\n        this.proton.destroy();\n      } catch (e) {}\n    }\n  }, {\n    key: \"onResize\",\n    value: function onResize() {}\n  }, {\n    key: \"createProton\",\n    value: function createProton(canvas, width, height) {\n      var _this2 = this;\n      var context = canvas.getContext(\"2d\");\n      this.proton = new Proton();\n      var emitter = new Proton.Emitter();\n      emitter.rate = new Proton.Rate(this.props.num ? new Proton.Span(this.props.num) : new Proton.Span(4, 9), new Proton.Span(0.8, 1.3));\n      emitter.addInitialize(new Proton.Mass(1));\n      emitter.addInitialize(new Proton.Radius(1, 50));\n      emitter.addInitialize(new Proton.Life(5, 6));\n      emitter.addInitialize(new Proton.Velocity(new Proton.Span(5, 8), new Proton.Span(30, 70), \"polar\"));\n      emitter.addBehaviour(new Proton.Alpha(1, 0));\n      emitter.addBehaviour(new Proton.Color([\"#36aaf3\", \"#fd769c\", \"#94ff22\", \"#ffa545\", \"#ffffff\"]));\n      emitter.addBehaviour(new Proton.Scale(0.7, 1));\n      emitter.addBehaviour(new Proton.Gravity(3));\n      emitter.addBehaviour(new Proton.Collision(emitter));\n      emitter.addBehaviour(this.customDeadBehaviour(canvas));\n      emitter.addBehaviour(new Proton.CrossZone(new Proton.RectZone(0, 0, canvas.width, canvas.height), \"bound\"));\n      emitter.p.x = Math.min(500, Math.max(canvas.width / 2 - 400, 50));\n      emitter.p.y = canvas.height / 2 + 50;\n      emitter.emit();\n      this.proton.addEmitter(emitter);\n      var renderer = new Proton.CanvasRenderer(canvas);\n      renderer.onProtonUpdate = function () {\n        context.fillStyle = getColor(_this2.props.color, 0.2) || \"rgba(255, 255, 255, 0.2)\";\n        context.fillRect(0, 0, canvas.width, canvas.height);\n      };\n      this.proton.addRenderer(renderer);\n    }\n  }, {\n    key: \"customDeadBehaviour\",\n    value: function customDeadBehaviour(canvas) {\n      var _this3 = this;\n      return {\n        initialize: function initialize(particle) {},\n        applyBehaviour: function applyBehaviour(particle) {\n          if (particle.p.y + particle.radius >= canvas.height) {\n            if (particle.radius > 9) {\n              _this3.miniEmitteing(particle);\n              particle.dead = true;\n            }\n          }\n        }\n      };\n    }\n  }, {\n    key: \"createMiniEmitter\",\n    value: function createMiniEmitter(canvas) {\n      var miniEmitter = new Proton.Emitter();\n      miniEmitter.rate = new Proton.Rate(new Proton.Span(3, 6), new Proton.Span(1, 2));\n      miniEmitter.addInitialize(new Proton.Mass(1));\n      miniEmitter.radiusInitialize = new Proton.Radius();\n      miniEmitter.addInitialize(miniEmitter.radiusInitialize);\n      miniEmitter.addInitialize(new Proton.Life(0.5, 1));\n      miniEmitter.addInitialize(new Proton.V(new Proton.Span(1.5, 3), new Proton.Span(0, 70, true), \"polar\"));\n      miniEmitter.colorBehaviour = new Proton.Color(\"#ffffff\");\n      miniEmitter.addBehaviour(new Proton.Alpha(1, 0));\n      miniEmitter.addBehaviour(miniEmitter.colorBehaviour);\n      miniEmitter.addBehaviour(new Proton.Gravity(4));\n      miniEmitter.addBehaviour(new Proton.Collision(miniEmitter));\n      miniEmitter.addBehaviour(new Proton.CrossZone(new Proton.RectZone(0, 0, canvas.width, canvas.height), \"bound\"));\n      this.proton.addEmitter(miniEmitter);\n      this.miniEmitter = miniEmitter;\n    }\n  }, {\n    key: \"miniEmitteing\",\n    value: function miniEmitteing(particle) {\n      var miniEmitter = this.miniEmitter;\n      miniEmitter.radiusInitialize.reset(particle.radius * 0.05, particle.radius * 0.2);\n      miniEmitter.colorBehaviour.reset(particle.color);\n      miniEmitter.p.x = particle.p.x;\n      miniEmitter.p.y = particle.p.y;\n      miniEmitter.emit(\"once\");\n    }\n  }, {\n    key: \"renderProton\",\n    value: function renderProton() {\n      this.proton && this.proton.update();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Canvas, {\n        bg: this.props.bg,\n        globalCompositeOperation: \"darker\",\n        onCanvasInited: this.onCanvasInited.bind(this),\n        onResize: this.onResize.bind(this)\n      });\n    }\n  }]);\n  return Ball;\n}(React.Component);\nvar Color = function (_React$Component) {\n  inherits(Color, _React$Component);\n  function Color(props) {\n    classCallCheck(this, Color);\n    var _this = possibleConstructorReturn(this, (Color.__proto__ || Object.getPrototypeOf(Color)).call(this, props));\n    _this.colors = [\"#529B88\", \"#CDD180\", \"#FFFA32\", \"#FB6255\", \"#FB4A53\", \"#FF4E50\", \"#F9D423\"];\n    _this.renderProton = _this.renderProton.bind(_this);\n    return _this;\n  }\n  createClass(Color, [{\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      try {\n        RAFManager.remove(this.renderProton);\n        this.proton.destroy();\n      } catch (e) {}\n    }\n  }, {\n    key: \"onCanvasInited\",\n    value: function onCanvasInited(canvas, width, height) {\n      this.createProton(canvas, width, height);\n      RAFManager.add(this.renderProton);\n    }\n  }, {\n    key: \"onResize\",\n    value: function onResize() {}\n  }, {\n    key: \"createProton\",\n    value: function createProton(canvas, width, height) {\n      this.proton = new Proton();\n      var emitter = new Proton.Emitter();\n      emitter.rate = new Proton.Rate(this.props.num ? new Proton.Span(this.props.num) : new Proton.Span(5, 8), new Proton.Span(0.1, 0.25));\n      emitter.addInitialize(new Proton.Mass(1));\n      emitter.addInitialize(new Proton.Radius(20, 200));\n      emitter.addInitialize(new Proton.Life(2, 4));\n      emitter.addInitialize(new Proton.Position(new Proton.RectZone(0, 0, width, height)));\n      emitter.addBehaviour(new Proton.Alpha(0, 1, Infinity, Proton.easeOutCubic));\n      emitter.addBehaviour(new Proton.Scale(1, 0, Infinity, Proton.easeOutCubic));\n      emitter.addBehaviour(new Proton.Color(this.colors, \"random\"));\n      emitter.emit();\n      this.proton.addEmitter(emitter);\n      var renderer = new Proton.CanvasRenderer(canvas);\n      this.proton.addRenderer(renderer);\n    }\n  }, {\n    key: \"renderProton\",\n    value: function renderProton() {\n      this.proton && this.proton.update();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Canvas, {\n        bg: this.props.bg,\n        globalCompositeOperation: \"darker\",\n        onCanvasInited: this.onCanvasInited.bind(this),\n        onResize: this.onResize.bind(this)\n      });\n    }\n  }]);\n  return Color;\n}(React.Component);\nvar Color$1 = function (_React$Component) {\n  inherits(Color, _React$Component);\n  function Color(props) {\n    classCallCheck(this, Color);\n    var _this = possibleConstructorReturn(this, (Color.__proto__ || Object.getPrototypeOf(Color)).call(this, props));\n    _this.colors = [\"#529B88\", \"#CDD180\", \"#FFFA32\", \"#FB6255\", \"#FB4A53\", \"#FF4E50\", \"#F9D423\"];\n    _this.renderProton = _this.renderProton.bind(_this);\n    return _this;\n  }\n  createClass(Color, [{\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      try {\n        RAFManager.remove(this.renderProton);\n        this.proton.destroy();\n      } catch (e) {}\n    }\n  }, {\n    key: \"onCanvasInited\",\n    value: function onCanvasInited(canvas, width, height) {\n      this.createProton(canvas, width, height);\n      RAFManager.add(this.renderProton);\n    }\n  }, {\n    key: \"onResize\",\n    value: function onResize(width, height) {\n      this.crossZoneBehaviour.zone.width = width;\n      this.crossZoneBehaviour.zone.height = height;\n      this.proton.renderers[0].resize(width, height);\n    }\n  }, {\n    key: \"getProp\",\n    value: function getProp(key, defaultVal) {\n      var config = this.props.config || {};\n      var val = config[key] || defaultVal;\n      if (Array.isArray(val)) {\n        return new Proton.Span(val[0], val[1]);\n      } else {\n        return val;\n      }\n    }\n  }, {\n    key: \"getArrProp\",\n    value: function getArrProp(key, defaultVal) {\n      var config = this.props.config || {};\n      var val = config[key] || defaultVal;\n      if (!val) return null;\n      if (Array.isArray(val)) {\n        return val;\n      } else {\n        return [val, val];\n      }\n    }\n  }, {\n    key: \"createProton\",\n    value: function createProton(canvas, width, height) {\n      var num = this.getProp(\"num\", [5, 8]);\n      var rps = this.getProp(\"rps\", [0.1, 0.2]);\n      var mass = this.getProp(\"mass\", 1);\n      var radius = this.getProp(\"radius\", [10, 30]);\n      var life = this.getProp(\"life\", [2, 3]);\n      var body = this.getProp(\"body\");\n      var position = this.getProp(\"position\");\n      var v = this.getProp(\"v\", [2, 3]);\n      var tha = this.getProp(\"tha\", [-15, 15]);\n      var alpha = this.getArrProp(\"alpha\");\n      var scale = this.getArrProp(\"scale\");\n      var color = this.getArrProp(\"color\");\n      var cross = this.getProp(\"cross\", \"dead\");\n      var random = this.getProp(\"random\");\n      var rotate = this.getArrProp(\"rotate\");\n      var g = this.getProp(\"g\");\n      var f = this.getArrProp(\"f\");\n      var emitterV = this.getProp(\"emitter\");\n      this.proton = new Proton();\n      var emitter = void 0;\n      if (emitterV === \"follow\") {\n        emitter = new Proton.FollowEmitter();\n      } else {\n        emitter = new Proton.Emitter();\n      }\n      emitter.rate = new Proton.Rate(num, rps);\n      emitter.addInitialize(new Proton.Mass(mass));\n      emitter.addInitialize(new Proton.Radius(radius));\n      emitter.addInitialize(new Proton.Life(life));\n      emitter.addInitialize(new Proton.Velocity(v, tha, \"polar\"));\n      if (body) emitter.addInitialize(new Proton.Body(body));\n      var pos = void 0;\n      if (position === \"all\" || position === \"screen\") {\n        pos = new Proton.Position(new Proton.RectZone(0, 0, canvas.width, canvas.height));\n      } else if ((typeof position === \"undefined\" ? \"undefined\" : _typeof(position)) === \"object\") {\n        pos = new Proton.Position(new Proton.RectZone(position.x, position.y, position.width, position.height));\n      } else {\n        emitter.p.x = canvas.width / 2;\n        emitter.p.y = canvas.height / 2;\n      }\n      emitter.addInitialize(pos);\n\n      /// behaviour\n      var alphaB = alpha ? new Proton.Alpha(alpha[0], alpha[1]) : new Proton.Alpha(0, 1);\n      var scaleB = scale ? new Proton.Scale(scale[0], scale[1]) : new Proton.Scale(1, 0.2);\n      var colorB = color ? new Proton.Color(color[0], color[1]) : new Proton.Color(this.colors);\n      emitter.addBehaviour(alphaB);\n      emitter.addBehaviour(scaleB);\n      if (!body) emitter.addBehaviour(colorB);\n      if (rotate) {\n        if (rotate[0] === true || rotate[0] === \"rotate\") {\n          emitter.addBehaviour(new Proton.Rotate());\n        } else {\n          emitter.addBehaviour(new Proton.Rotate(rotate[0], rotate[1]));\n        }\n      }\n      var zone = new Proton.RectZone(0, 0, canvas.width, canvas.height);\n      var crossZoneBehaviour = new Proton.CrossZone(zone, cross);\n      emitter.addBehaviour(crossZoneBehaviour);\n      random && emitter.addBehaviour(new Proton.RandomDrift(random, random, 0.05));\n      g && emitter.addBehaviour(new Proton.G(g));\n      f && emitter.addBehaviour(new Proton.F(f[0], f[1]));\n      emitter.emit();\n      this.proton.addEmitter(emitter);\n      var renderer = this.createRenderer(canvas);\n      this.proton.addRenderer(renderer);\n      this.emitter = emitter;\n      this.crossZoneBehaviour = crossZoneBehaviour;\n    }\n  }, {\n    key: \"createRenderer\",\n    value: function createRenderer(canvas) {\n      var width = canvas.width;\n      var height = canvas.height;\n      var context = canvas.getContext(\"2d\");\n      var renderer = new Proton.CanvasRenderer(canvas);\n      var onUpdate = this.getProp(\"onUpdate\");\n      if (onUpdate) {\n        renderer.onProtonUpdate = function () {\n          onUpdate(context, width, height);\n        };\n      }\n      var onParticleCreated = this.getProp(\"onParticleCreated\");\n      if (onParticleCreated) {\n        renderer.onParticleCreated = function (particle) {\n          onParticleCreated(context, particle);\n        };\n      }\n      var onParticleUpdate = this.getProp(\"onParticleUpdate\");\n      if (onParticleUpdate) {\n        renderer.onParticleUpdate = function (particle) {\n          onParticleUpdate(context, particle);\n        };\n      }\n      return renderer;\n    }\n  }, {\n    key: \"renderProton\",\n    value: function renderProton() {\n      this.proton && this.proton.update();\n    }\n  }, {\n    key: \"handleMouseDown\",\n    value: function handleMouseDown(e) {\n      var onMouseDown = this.getProp(\"onMouseDown\");\n      if (onMouseDown) {\n        onMouseDown(e);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var globalCompositeOperation = this.props.globalCompositeOperation || this.props.operation || \"source-over\";\n      return React.createElement(Canvas, {\n        bg: this.props.bg,\n        onMouseDown: this.handleMouseDown.bind(this),\n        globalCompositeOperation: globalCompositeOperation,\n        onCanvasInited: this.onCanvasInited.bind(this),\n        onResize: this.onResize.bind(this)\n      });\n    }\n  }]);\n  return Color;\n}(React.Component);\nvar Lines = function (_React$Component) {\n  inherits(Lines, _React$Component);\n  function Lines(props) {\n    classCallCheck(this, Lines);\n    var _this = possibleConstructorReturn(this, (Lines.__proto__ || Object.getPrototypeOf(Lines)).call(this, props));\n    _this.renderProton = _this.renderProton.bind(_this);\n    return _this;\n  }\n  createClass(Lines, [{\n    key: \"onCanvasDidMount\",\n    value: function onCanvasDidMount(canvas) {\n      if (this.props.color) {\n        canvas.style.backgroundColor = this.props.color;\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      try {\n        RAFManager.remove(this.renderProton);\n        this.proton.destroy();\n      } catch (e) {}\n    }\n  }, {\n    key: \"onCanvasInited\",\n    value: function onCanvasInited(canvas, width, height) {\n      this.createProton(canvas, width, height);\n      RAFManager.add(this.renderProton);\n    }\n  }, {\n    key: \"onResize\",\n    value: function onResize(width, height) {\n      this.crossZoneBehaviour.zone.width = width;\n      this.crossZoneBehaviour.zone.height = height;\n      this.proton.renderers[0].resize(width, height);\n    }\n  }, {\n    key: \"createProton\",\n    value: function createProton(canvas, width, height) {\n      this.proton = new Proton();\n      var emitter = new Proton.Emitter();\n      emitter.damping = 0.008;\n      emitter.rate = new Proton.Rate(this.props.num ? this.props.num : 250);\n      emitter.addInitialize(new Proton.Mass(1));\n      emitter.addInitialize(new Proton.Radius(4));\n      emitter.addInitialize(new Proton.Velocity(new Proton.Span(1.5), new Proton.Span(0, 360), \"polar\"));\n      var mouseObj = {\n        x: width / 2,\n        y: height / 2\n      };\n      var attractionBehaviour = new Proton.Attraction(mouseObj, 0, 0);\n      var crossZoneBehaviour = new Proton.CrossZone(new Proton.RectZone(0, 0, canvas.width, canvas.height), \"cross\");\n      emitter.addBehaviour(new Proton.Color(\"random\"));\n      emitter.addBehaviour(attractionBehaviour, crossZoneBehaviour);\n      emitter.addBehaviour(new Proton.RandomDrift(10, 10, 0.05));\n      emitter.p.x = canvas.width / 2;\n      emitter.p.y = canvas.height / 2;\n      emitter.emit(\"once\");\n      this.proton.addEmitter(emitter);\n      this.proton.addRenderer(this.createRenderer(canvas));\n      this.crossZoneBehaviour = crossZoneBehaviour;\n    }\n  }, {\n    key: \"createRenderer\",\n    value: function createRenderer(canvas) {\n      var _this2 = this;\n      var context = canvas.getContext(\"2d\");\n      var renderer = new Proton.CanvasRenderer(canvas);\n      renderer.onProtonUpdate = function () {\n        context.fillStyle = getColor(_this2.props.color, 0.02) || \"rgba(0, 0, 0, 0.02)\";\n        context.fillRect(0, 0, canvas.width, canvas.height);\n      };\n      renderer.onParticleUpdate = function (particle) {\n        context.beginPath();\n        context.strokeStyle = particle.color;\n        context.lineWidth = 1;\n        context.moveTo(particle.old.p.x, particle.old.p.y);\n        context.lineTo(particle.p.x, particle.p.y);\n        context.closePath();\n        context.stroke();\n      };\n      return renderer;\n    }\n  }, {\n    key: \"renderProton\",\n    value: function renderProton() {\n      this.proton && this.proton.update();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Canvas, {\n        bg: this.props.bg,\n        globalCompositeOperation: \"darker\",\n        onCanvasDidMount: this.onCanvasDidMount.bind(this),\n        onCanvasInited: this.onCanvasInited.bind(this),\n        onResize: this.onResize.bind(this)\n      });\n    }\n  }]);\n  return Lines;\n}(React.Component);\nvar Thick = function (_React$Component) {\n  inherits(Thick, _React$Component);\n  function Thick(props) {\n    classCallCheck(this, Thick);\n    var _this = possibleConstructorReturn(this, (Thick.__proto__ || Object.getPrototypeOf(Thick)).call(this, props));\n    _this.hue = 0;\n    _this.index = 0;\n    _this.colorTemplate = \"hsla(hue,80%,50%, 0.75)\";\n    _this.renderProton = _this.renderProton.bind(_this);\n    return _this;\n  }\n  createClass(Thick, [{\n    key: \"onCanvasDidMount\",\n    value: function onCanvasDidMount(canvas) {\n      if (this.props.color) {\n        canvas.style.backgroundColor = this.props.color;\n      }\n    }\n  }, {\n    key: \"onCanvasInited\",\n    value: function onCanvasInited(canvas, width, height) {\n      this.canvas = canvas;\n      this.createProton(canvas, width, height);\n      RAFManager.add(this.renderProton);\n    }\n  }, {\n    key: \"onResize\",\n    value: function onResize(width, height) {\n      this.crossZoneBehaviour.zone.width = width;\n      this.crossZoneBehaviour.zone.height = height;\n      this.proton.renderers[0].resize(width, height);\n    }\n  }, {\n    key: \"createProton\",\n    value: function createProton(canvas, width, height) {\n      this.proton = new Proton();\n      var emitter = new Proton.Emitter();\n      emitter.damping = 0.008;\n      emitter.rate = new Proton.Rate(this.props.num ? this.props.num : 150);\n\n      // Initialize\n      emitter.addInitialize(new Proton.Mass(1));\n      emitter.addInitialize(new Proton.Radius(8));\n      emitter.addInitialize(new Proton.V(new Proton.Span(0.1, 0.5), new Proton.Span(0, 360), \"polar\"));\n      emitter.addInitialize(new Proton.Position(new Proton.CircleZone(canvas.width / 2, canvas.height / 2, 100)));\n\n      // Behaviour\n      var crossZoneBehaviour = new Proton.CrossZone(new Proton.RectZone(0, 0, canvas.width, canvas.height), \"cross\");\n      emitter.addBehaviour(crossZoneBehaviour);\n      this.repulsion = new Proton.Repulsion({\n        x: canvas.width / 2,\n        y: canvas.height / 2 - 100\n      }, 3, 300);\n      this.attraction = new Proton.Attraction({\n        x: canvas.width / 2,\n        y: canvas.height / 2\n      }, 3, 200);\n      emitter.addBehaviour(this.attraction, this.repulsion);\n      emitter.addBehaviour(new Proton.Color(\"random\"));\n      emitter.addBehaviour(new Proton.RandomDrift(20, 15, 0.15));\n      emitter.emit(\"once\");\n      this.proton.addEmitter(emitter);\n      this.proton.addRenderer(this.createRenderer(canvas));\n      this.crossZoneBehaviour = crossZoneBehaviour;\n    }\n  }, {\n    key: \"createRenderer\",\n    value: function createRenderer(canvas) {\n      var _this2 = this;\n      var context = canvas.getContext(\"2d\");\n      var renderer = new Proton.CanvasRenderer(canvas);\n      renderer.onProtonUpdate = function () {\n        _this2.hue += 1;\n        context.fillStyle = getColor(_this2.props.color, 0.02) || \"rgba(0, 0, 0, 0.02)\";\n        context.fillRect(0, 0, canvas.width, canvas.height);\n      };\n      renderer.onParticleCreated = function (particle) {\n        particle.data.begin = Proton.MathUtil.randomAToB(1, 120);\n        particle.data.tha = Proton.MathUtil.randomAToB(0, Math.PI * 2);\n      };\n      renderer.onParticleUpdate = function (particle) {\n        var hue = particle.data.begin + _this2.hue;\n        particle.color = _this2.colorTemplate.replace(\"hue\", hue % 360);\n        var ratio = 3 / 4;\n        var radius = particle.radius * (1 - ratio) * Math.cos(particle.data.tha += 0.01) + particle.radius * ratio;\n        context.beginPath();\n        context.fillStyle = particle.color;\n        context.arc(particle.p.x, particle.p.y, radius, 0, Math.PI * 2, true);\n        context.closePath();\n        context.fill();\n      };\n      return renderer;\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      try {\n        RAFManager.remove(this.renderProton);\n        this.proton.destroy();\n      } catch (e) {}\n    }\n  }, {\n    key: \"renderProton\",\n    value: function renderProton() {\n      var canvas = this.canvas;\n      this.proton.update();\n      if (this.index % 200 === 0) {\n        this.attraction.targetPosition.x = Math.random() * canvas.width;\n        this.attraction.targetPosition.y = Math.random() * canvas.height;\n        this.repulsion.targetPosition.x = Math.random() * canvas.width;\n        this.repulsion.targetPosition.y = Math.random() * canvas.height;\n      }\n      this.index++;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Canvas, {\n        bg: this.props.bg,\n        onCanvasDidMount: this.onCanvasDidMount.bind(this),\n        onCanvasInited: this.onCanvasInited.bind(this),\n        onResize: this.onResize.bind(this)\n      });\n    }\n  }]);\n  return Thick;\n}(React.Component);\nvar Square = function (_React$Component) {\n  inherits(Square, _React$Component);\n  function Square(props) {\n    classCallCheck(this, Square);\n    var _this = possibleConstructorReturn(this, (Square.__proto__ || Object.getPrototypeOf(Square)).call(this, props));\n    _this.colors = [\"#fad390\", \"#81ecec\", \"#ffffff\", \"#badc58\", \"#f9ca24\", \"#FEA47F\"];\n    _this.renderProton = _this.renderProton.bind(_this);\n    return _this;\n  }\n  createClass(Square, [{\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      try {\n        RAFManager.remove(this.renderProton);\n        this.proton.destroy();\n      } catch (e) {}\n    }\n  }, {\n    key: \"onCanvasDidMount\",\n    value: function onCanvasDidMount(canvas) {}\n  }, {\n    key: \"onCanvasInited\",\n    value: function onCanvasInited(canvas, width, height) {\n      this.createProton(canvas, width, height);\n      RAFManager.add(this.renderProton);\n    }\n  }, {\n    key: \"onResize\",\n    value: function onResize(width, height) {\n      var dis = 150;\n      this.crossZoneBehaviour.zone.width = width + 2 * dis;\n      this.crossZoneBehaviour.zone.height = height + 2 * dis;\n      this.proton.renderers[0].resize(width, height);\n    }\n  }, {\n    key: \"createProton\",\n    value: function createProton(canvas, width, height) {\n      this.proton = new Proton();\n      var emitter = new Proton.Emitter();\n      emitter.rate = new Proton.Rate(this.props.num ? this.props.num : 50);\n      emitter.damping = 0;\n      emitter.addInitialize(new Proton.Mass(1));\n      emitter.addInitialize(new Proton.Radius(4, 70));\n      emitter.addInitialize(new Proton.Velocity(new Proton.Span(2, 10), new Proton.Span(0), \"polar\"));\n      emitter.addInitialize(new Proton.Position(new Proton.LineZone(0, canvas.height, canvas.width, canvas.height)));\n      var dis = 150;\n      var crossZoneBehaviour = new Proton.CrossZone(new Proton.RectZone(0 - dis, 0 - dis, canvas.width + 2 * dis, canvas.height + 2 * dis), \"cross\");\n      emitter.addBehaviour(crossZoneBehaviour);\n      emitter.addBehaviour(new Proton.Alpha(Proton.getSpan(0.1, 0.55)));\n      emitter.addBehaviour(new Proton.Color(this.colors));\n      emitter.emit(\"once\");\n      this.proton.addEmitter(emitter);\n      var renderer = this.createRenderer(canvas);\n      this.proton.addRenderer(renderer);\n      this.crossZoneBehaviour = crossZoneBehaviour;\n      emitter.preEmit(2);\n    }\n  }, {\n    key: \"createRenderer\",\n    value: function createRenderer(canvas) {\n      var context = canvas.getContext(\"2d\");\n      var renderer = new Proton.CustomRenderer();\n      renderer.onProtonUpdate = function () {\n        context.clearRect(0, 0, canvas.width, canvas.height);\n      };\n      renderer.onParticleCreated = function (particle) {\n        var w = particle.radius || 60;\n        var h = Proton.MathUtil.randomAToB(100, 200, \"int\");\n        particle.data.w = w;\n        particle.data.h = h;\n      };\n      renderer.onParticleUpdate = function (particle) {\n        var w = particle.data.w;\n        var h = particle.data.h;\n        context.save();\n        context.globalAlpha = particle.alpha;\n        context.fillStyle = particle.color;\n        context.translate(particle.p.x, particle.p.y);\n        context.rotate(Proton.MathUtil.degreeTransform(particle.rotation));\n        context.translate(-particle.p.x, -particle.p.y);\n        context.beginPath();\n        context.rect(particle.p.x - w / 2, particle.p.y - h / 2, w, h);\n        context.closePath();\n        context.fill();\n        context.globalAlpha = 1;\n        context.restore();\n      };\n      return renderer;\n    }\n  }, {\n    key: \"renderProton\",\n    value: function renderProton() {\n      this.proton && this.proton.update();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Canvas, {\n        bg: this.props.bg,\n        globalCompositeOperation: \"lighter\",\n        onCanvasDidMount: this.onCanvasDidMount.bind(this),\n        onCanvasInited: this.onCanvasInited.bind(this),\n        onResize: this.onResize.bind(this)\n      });\n    }\n  }]);\n  return Square;\n}(React.Component);\nvar Cobweb = function (_React$Component) {\n  inherits(Cobweb, _React$Component);\n  function Cobweb(props) {\n    classCallCheck(this, Cobweb);\n    var _this = possibleConstructorReturn(this, (Cobweb.__proto__ || Object.getPrototypeOf(Cobweb)).call(this, props));\n    _this.renderProton = _this.renderProton.bind(_this);\n    return _this;\n  }\n  createClass(Cobweb, [{\n    key: \"onCanvasInited\",\n    value: function onCanvasInited(canvas, width, height) {\n      this.createProton(canvas, width, height);\n      RAFManager.add(this.renderProton);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      try {\n        RAFManager.remove(this.renderProton);\n        this.proton.destroy();\n      } catch (e) {}\n    }\n  }, {\n    key: \"onResize\",\n    value: function onResize(width, height) {\n      this.crossZoneBehaviour.zone.width = width;\n      this.crossZoneBehaviour.zone.height = height;\n      this.proton.renderers[0].resize(width, height);\n    }\n  }, {\n    key: \"createProton\",\n    value: function createProton(canvas, width, height) {\n      this.proton = new Proton();\n      var emitter = new Proton.Emitter();\n      emitter.rate = new Proton.Rate(this.props.num ? new Proton.Span(this.props.num) : new Proton.Span(100), new Proton.Span(0.05, 0.2));\n      emitter.addInitialize(new Proton.Mass(1));\n      emitter.addInitialize(new Proton.Radius(1, 4));\n      emitter.addInitialize(new Proton.Life(Infinity));\n      var pointZone = new Proton.Position(new Proton.RectZone(0, 0, width, height));\n      emitter.addInitialize(pointZone);\n      emitter.addInitialize(new Proton.Velocity(new Proton.Span(0.3, 0.6), new Proton.Span(0, 360), \"polar\"));\n      emitter.addBehaviour(new Proton.Alpha(Proton.getSpan(0.2, 0.9)));\n      emitter.addBehaviour(new Proton.Color(this.props.color || \"#333\"));\n      this.crossZoneBehaviour = new Proton.CrossZone(new Proton.RectZone(0, 0, width, height), \"cross\");\n      emitter.addBehaviour(this.crossZoneBehaviour);\n      emitter.emit(\"once\");\n      emitter.damping = 0;\n      this.proton.addEmitter(emitter);\n      this.proton.addRenderer(this.createRenderer(canvas, emitter));\n    }\n  }, {\n    key: \"createRenderer\",\n    value: function createRenderer(canvas, emitter) {\n      var _this2 = this;\n      var context = canvas.getContext(\"2d\");\n      var renderer = new Proton.CanvasRenderer(canvas);\n      var R = 140;\n      renderer.onProtonUpdateAfter = function () {\n        var particles = emitter.particles;\n        for (var i = 0; i < particles.length; i++) {\n          for (var j = i + 1; j < particles.length; j++) {\n            var pA = particles[i];\n            var pB = particles[j];\n            var dis = pA.p.distanceTo(pB.p);\n            if (dis < R) {\n              var alpha = (1 - dis / R) * 0.5;\n              context.strokeStyle = getColor(_this2.props.color, alpha) || \"rgba(3, 3, 3, \" + alpha + \")\";\n              context.beginPath();\n              context.moveTo(pA.p.x, pA.p.y);\n              context.lineTo(pB.p.x, pB.p.y);\n              context.closePath();\n              context.stroke();\n            }\n          }\n        }\n      };\n      return renderer;\n    }\n  }, {\n    key: \"renderProton\",\n    value: function renderProton() {\n      this.proton && this.proton.update();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Canvas, {\n        bg: this.props.bg,\n        globalCompositeOperation: \"darker\",\n        onCanvasInited: this.onCanvasInited.bind(this),\n        onResize: this.onResize.bind(this)\n      });\n    }\n  }]);\n  return Cobweb;\n}(React.Component);\nvar Circle = function (_React$Component) {\n  inherits(Circle, _React$Component);\n  function Circle(props) {\n    classCallCheck(this, Circle);\n    var _this = possibleConstructorReturn(this, (Circle.__proto__ || Object.getPrototypeOf(Circle)).call(this, props));\n    _this.colors = [\"#74b9ff\", \"#e84393\", \"#6c5ce7\", \"#00b894\", \"#fdcb6e\", \"#006266\", \"#1B1464\"];\n    _this.renderProton = _this.renderProton.bind(_this);\n    return _this;\n  }\n  createClass(Circle, [{\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      try {\n        RAFManager.remove(this.renderProton);\n        this.proton.destroy();\n      } catch (e) {}\n    }\n  }, {\n    key: \"onCanvasInited\",\n    value: function onCanvasInited(canvas, width, height) {\n      this.createProton(canvas, width, height);\n      RAFManager.add(this.renderProton);\n    }\n  }, {\n    key: \"onResize\",\n    value: function onResize(width, height) {\n      this.crossZoneBehaviour.zone.width = width;\n      this.crossZoneBehaviour.zone.height = height;\n      this.proton.renderers[0].resize(width, height);\n    }\n  }, {\n    key: \"createProton\",\n    value: function createProton(canvas, width, height) {\n      this.proton = new Proton();\n      var emitter = new Proton.Emitter();\n      emitter.rate = new Proton.Rate(this.props.num || 20);\n      emitter.damping = 0.008;\n      emitter.addInitialize(new Proton.Mass(1));\n      emitter.addInitialize(new Proton.Radius(30, 600));\n      emitter.addInitialize(new Proton.Velocity(new Proton.Span(0.5), new Proton.Span(0, 360), \"polar\"));\n      emitter.addInitialize(new Proton.Position(new Proton.RectZone(0, 0, canvas.width, canvas.height)));\n      var crossZoneBehaviour = new Proton.CrossZone(new Proton.RectZone(0, 0, canvas.width, canvas.height), \"cross\");\n      emitter.addBehaviour(crossZoneBehaviour);\n      emitter.addBehaviour(new Proton.Alpha(Proton.getSpan(0.35, 0.55)));\n      emitter.addBehaviour(new Proton.Color(this.getColor()));\n      emitter.addBehaviour(new Proton.RandomDrift(50, 50, 0.5));\n      emitter.emit(\"once\");\n      this.proton.addEmitter(emitter);\n      var renderer = new Proton.CanvasRenderer(canvas);\n      this.proton.addRenderer(renderer);\n      this.crossZoneBehaviour = crossZoneBehaviour;\n    }\n  }, {\n    key: \"getColor\",\n    value: function getColor() {\n      var c = this.colors;\n      if (this.props.color) {\n        if (Array.isArray(this.props.color)) {\n          c = this.props.color;\n        } else {\n          c = [this.props.color];\n        }\n      }\n      return c;\n    }\n  }, {\n    key: \"renderProton\",\n    value: function renderProton() {\n      this.proton && this.proton.update();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Canvas, {\n        bg: this.props.bg,\n        globalCompositeOperation: \"darken\",\n        onCanvasInited: this.onCanvasInited.bind(this),\n        onResize: this.onResize.bind(this)\n      });\n    }\n  }]);\n  return Circle;\n}(React.Component);\nvar Tadpole = function (_React$Component) {\n  inherits(Tadpole, _React$Component);\n  function Tadpole(props) {\n    classCallCheck(this, Tadpole);\n    var _this = possibleConstructorReturn(this, (Tadpole.__proto__ || Object.getPrototypeOf(Tadpole)).call(this, props));\n    _this.renderProton = _this.renderProton.bind(_this);\n    return _this;\n  }\n  createClass(Tadpole, [{\n    key: \"onCanvasDidMount\",\n    value: function onCanvasDidMount(canvas) {}\n  }, {\n    key: \"onCanvasInited\",\n    value: function onCanvasInited(canvas, width, height) {\n      this.createProton(canvas, width, height);\n      this.renderProton();\n    }\n  }, {\n    key: \"onResize\",\n    value: function onResize(width, height) {\n      this.crossZoneBehaviour.zone.width = width;\n      this.crossZoneBehaviour.zone.height = height;\n      this.proton.renderers[0].resize(width, height);\n    }\n  }, {\n    key: \"createProton\",\n    value: function createProton(canvas, width, height) {\n      this.proton = new Proton();\n      var emitter = new Proton.Emitter();\n      emitter.damping = 0.008;\n      emitter.rate = new Proton.Rate(this.props.num ? this.props.num : 50);\n      emitter.addInitialize(new Proton.Mass(1));\n      emitter.addInitialize(new Proton.Radius(5, 9));\n      emitter.addInitialize(new Proton.Velocity(new Proton.Span(1.5), new Proton.Span(0, 360), \"polar\"));\n      emitter.addInitialize(new Proton.Position(new Proton.RectZone(0, 0, width, height)));\n      var mouseInfo = {\n        x: width / 2,\n        y: height / 2\n      };\n      var attractionBehaviour = new Proton.Attraction(mouseInfo, 0, 0);\n      var crossZoneBehaviour = new Proton.CrossZone(new Proton.RectZone(0, 0, canvas.width, canvas.height), \"bound\");\n      emitter.addBehaviour(new Proton.Color(this.props.color || \"#bbb\"));\n      //emitter.addBehaviour(new Proton.Alpha(new Proton.Span(0.5, 1)));\n      emitter.addBehaviour(attractionBehaviour, crossZoneBehaviour);\n      emitter.addBehaviour(new Proton.RandomDrift(15, 15, 0.05));\n      emitter.emit(\"once\");\n      this.proton.addEmitter(emitter);\n      this.proton.addRenderer(this.createRenderer(canvas));\n      this.crossZoneBehaviour = crossZoneBehaviour;\n    }\n  }, {\n    key: \"createRenderer\",\n    value: function createRenderer(canvas) {\n      var jointCount = 10;\n      var delayTime = 8;\n      var context = canvas.getContext(\"2d\");\n      var renderer = new Proton.CanvasRenderer(canvas);\n      renderer.onProtonUpdate = function () {\n        context.clearRect(0, 0, canvas.width, canvas.height);\n      };\n      renderer.onParticleCreated = function (particle) {\n        particle.data.points = [];\n        particle.data.index = 0;\n      };\n      renderer.onParticleUpdate = function (particle) {\n        drawTadpoleTail(particle);\n        if (particle.data.index % delayTime === 0) fillPointsData(particle);\n        drawTadpoleHead(particle);\n        particle.data.index++;\n      };\n      var fillPointsData = function fillPointsData(particle) {\n        particle.data.points.unshift(particle.p.y);\n        particle.data.points.unshift(particle.p.x);\n        if (particle.data.points.length > jointCount) {\n          particle.data.points.pop();\n          particle.data.points.pop();\n        }\n      };\n      var drawTadpoleHead = function drawTadpoleHead(particle) {\n        context.fillStyle = particle.color;\n        context.beginPath();\n        context.arc(particle.p.x, particle.p.y, particle.radius, 0, Math.PI * 2, true);\n        context.closePath();\n        context.fill();\n      };\n      var drawTadpoleTail = function drawTadpoleTail(particle) {\n        context.beginPath();\n        context.strokeStyle = particle.color;\n        context.moveTo(particle.p.x, particle.p.y);\n        var l = particle.data.points.length;\n        for (var i = 0; i < l; i += 2) {\n          var x = particle.data.points[i];\n          var y = particle.data.points[i + 1];\n          context.lineWidth = linearEvaluation(i, l);\n          context.lineTo(x, y);\n          context.stroke();\n        }\n      };\n      var linearEvaluation = function linearEvaluation(i, l) {\n        if (l <= 2) return 1;\n        var max = 6;\n        var A = (max - 1) / (2 / l - 1);\n        var B = 1 - A;\n        var X = (i + 2) / l;\n        var val = A * X + B;\n        val = val >> 0;\n        return val;\n      };\n      return renderer;\n    }\n  }, {\n    key: \"renderProton\",\n    value: function renderProton() {\n      var _this2 = this;\n      RAFManager.add(function () {\n        _this2.proton.update();\n        //this.proton.stats.update();\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Canvas, {\n        bg: this.props.bg,\n        globalCompositeOperation: \"darker\",\n        onCanvasDidMount: this.onCanvasDidMount.bind(this),\n        onCanvasInited: this.onCanvasInited.bind(this),\n        onResize: this.onResize.bind(this)\n      });\n    }\n  }]);\n  return Tadpole;\n}(React.Component);\nvar COLOR = [\"#f6b93b\", \"#18dcff\", \"#cd84f1\", \"#ED4C67\", \"#ffffff\", \"#b71540\", \"#32ff7e\", \"#ff3838\"];\nvar Polygon = function (_React$Component) {\n  inherits(Polygon, _React$Component);\n  function Polygon(props) {\n    classCallCheck(this, Polygon);\n    var _this = possibleConstructorReturn(this, (Polygon.__proto__ || Object.getPrototypeOf(Polygon)).call(this, props));\n    _this.renderProton = _this.renderProton.bind(_this);\n    return _this;\n  }\n  createClass(Polygon, [{\n    key: \"onCanvasInited\",\n    value: function onCanvasInited(canvas, width, height) {\n      this.createProton(canvas);\n      this.createEmitter({\n        canvas: canvas,\n        x: width / 2,\n        y: height / 2,\n        mainEmitter: true,\n        zone: \"bound\"\n      });\n      RAFManager.add(this.renderProton);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      try {\n        RAFManager.remove(this.renderProton);\n        this.proton.destroy();\n      } catch (e) {}\n    }\n  }, {\n    key: \"onResize\",\n    value: function onResize() {}\n  }, {\n    key: \"createProton\",\n    value: function createProton(canvas) {\n      this.proton = new Proton();\n      var renderer = this.createRenderer(canvas);\n      this.proton.addRenderer(renderer);\n    }\n  }, {\n    key: \"createRenderer\",\n    value: function createRenderer(canvas) {\n      var context = canvas.getContext(\"2d\");\n      var renderer = new Proton.CustomRenderer();\n      renderer.onProtonUpdate = function () {\n        context.clearRect(0, 0, canvas.width, canvas.height);\n      };\n      renderer.onParticleCreated = function (particle) {\n        particle.data.count = Proton.MathUtil.randomAToB(3, 10, true);\n      };\n      renderer.onParticleUpdate = function (particle) {\n        context.save();\n        context.globalAlpha = particle.alpha;\n        context.fillStyle = particle.color;\n        context.translate(particle.p.x, particle.p.y);\n        context.rotate(Proton.MathUtil.degreeTransform(particle.rotation));\n        context.translate(-particle.p.x, -particle.p.y);\n        context.beginPath();\n        drawPolygon(particle, particle.data.count);\n        context.closePath();\n        context.fill();\n        context.globalAlpha = 1;\n        context.restore();\n      };\n      renderer.onParticleDead = function (particle) {};\n      var drawPolygon = function drawPolygon(particle, count) {\n        if (count >= 7) {\n          context.arc(particle.p.x, particle.p.y, particle.radius, 0, Math.PI * 2, true);\n        } else {\n          var radius = particle.radius;\n          for (var i = 0; i <= count; i++) {\n            var x = particle.p.x + radius * Math.cos(Math.PI / 180 * 360 / count * i);\n            var y = particle.p.y + radius * Math.sin(Math.PI / 180 * 360 / count * i);\n            if (i === 0) context.moveTo(x, y);else context.lineTo(x, y);\n          }\n        }\n      };\n      return renderer;\n    }\n  }, {\n    key: \"createEmitter\",\n    value: function createEmitter(_ref) {\n      var mainEmitter = _ref.mainEmitter,\n        canvas = _ref.canvas,\n        x = _ref.x,\n        y = _ref.y,\n        radius = _ref.radius,\n        _ref$color = _ref.color,\n        color = _ref$color === undefined ? COLOR : _ref$color,\n        _ref$zone = _ref.zone,\n        zone = _ref$zone === undefined ? \"dead\" : _ref$zone,\n        _ref$once = _ref.once,\n        once = _ref$once === undefined ? \"all\" : _ref$once,\n        _ref$alpha = _ref.alpha,\n        alpha = _ref$alpha === undefined ? 0.85 : _ref$alpha,\n        _ref$gravity = _ref.gravity,\n        gravity = _ref$gravity === undefined ? 3.5 : _ref$gravity;\n      var emitter = this.proton.pool.get(Proton.Emitter);\n      if (!emitter.completed) {\n        emitter.rate = new Proton.Rate(this.props.num ? new Proton.Span(this.props.num) : new Proton.Span(4, 9), new Proton.Span(1.6, 2.2));\n        var radiusInit = mainEmitter ? new Proton.Radius(10, 110) : new Proton.Radius(3, radius);\n        emitter.addInitialize(new Proton.Mass(1));\n        emitter.addInitialize(radiusInit);\n        emitter.addInitialize(new Proton.Life(3, 6));\n        emitter.addInitialize(new Proton.Velocity(new Proton.Span(4, 6), new Proton.Span(-90, 90), \"polar\"));\n        emitter.addBehaviour(new Proton.Alpha(alpha, 0.2));\n        emitter.addBehaviour(new Proton.Color(color));\n        emitter.addBehaviour(new Proton.Scale(1, 0.3));\n        emitter.addBehaviour(new Proton.Rotate());\n        emitter.addBehaviour(new Proton.Gravity(gravity));\n        emitter.addBehaviour(this.customDeadBehaviour(canvas));\n        emitter.addBehaviour(new Proton.CrossZone(new Proton.RectZone(0, 0, canvas.width, canvas.height), zone));\n      }\n      emitter.p.x = x;\n      emitter.p.y = y;\n      if (once === \"once\") emitter.emit(\"once\");else emitter.emit();\n      this.proton.addEmitter(emitter);\n      //this.expireEmitter(emitter);\n    }\n  }, {\n    key: \"expireEmitter\",\n    value: function expireEmitter(emitter) {\n      var _this2 = this;\n      setTimeout(function () {\n        emitter.completed = true;\n        _this2.proton.pool.expire(emitter);\n        _this2.proton.removeEmitter(emitter);\n      }, 500);\n    }\n  }, {\n    key: \"customDeadBehaviour\",\n    value: function customDeadBehaviour(canvas) {\n      var _this3 = this;\n      return {\n        initialize: function initialize(particle) {\n          particle.data = particle.data || {};\n          particle.data.oldRadius = particle.radius;\n          particle.data.emitterCount = 0;\n        },\n        applyBehaviour: function applyBehaviour(particle) {\n          if (particle.radius < 5) return;\n          if (particle.data.emitterCount >= 2) return;\n          if (particle.radius <= 1 / 3 * particle.data.oldRadius) {\n            particle.data.emitterCount++;\n            _this3.createEmitter({\n              canvas: canvas,\n              x: particle.p.x,\n              y: particle.p.y,\n              radius: particle.radius * (1 / 2),\n              alpha: 0.5,\n              gravity: 5,\n              color: particle.color,\n              once: \"once\"\n            });\n          }\n        }\n      };\n    }\n  }, {\n    key: \"renderProton\",\n    value: function renderProton() {\n      this.proton && this.proton.update();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Canvas, {\n        bg: this.props.bg,\n        globalCompositeOperation: \"darker\",\n        onCanvasInited: this.onCanvasInited.bind(this),\n        onResize: this.onResize.bind(this)\n      });\n    }\n  }]);\n  return Polygon;\n}(React.Component);\nvar Fountain = function (_React$Component) {\n  inherits(Fountain, _React$Component);\n  function Fountain(props) {\n    classCallCheck(this, Fountain);\n    var _this = possibleConstructorReturn(this, (Fountain.__proto__ || Object.getPrototypeOf(Fountain)).call(this, props));\n    _this.colors = [\"#529B88\", \"#CDD180\", \"#FFFA32\", \"#FB6255\", \"#FB4A53\", \"#FF4E50\", \"#F9D423\"];\n    _this.renderProton = _this.renderProton.bind(_this);\n    return _this;\n  }\n  createClass(Fountain, [{\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      try {\n        RAFManager.remove(this.renderProton);\n        this.proton.destroy();\n      } catch (e) {}\n    }\n  }, {\n    key: \"onCanvasInited\",\n    value: function onCanvasInited(canvas, width, height) {\n      this.createProton(canvas, width, height);\n      RAFManager.add(this.renderProton);\n    }\n  }, {\n    key: \"onResize\",\n    value: function onResize() {}\n  }, {\n    key: \"createProton\",\n    value: function createProton(canvas, width, height) {\n      this.proton = new Proton();\n      var emitter = new Proton.Emitter();\n      emitter.rate = new Proton.Rate(this.props.num ? new Proton.Span(this.props.num) : new Proton.Span(4, 8), new Proton.Span(0.1, 0.25));\n      emitter.addInitialize(new Proton.Mass(1));\n      emitter.addInitialize(new Proton.Radius(20, 200));\n      emitter.addInitialize(new Proton.Life(2, 4));\n      emitter.addInitialize(new Proton.Velocity(new Proton.Span(4, 7), new Proton.Span(0, 360), \"polar\"));\n      emitter.addInitialize(new Proton.Position(new Proton.CircleZone(width / 2, height / 2, 100)));\n      emitter.addBehaviour(new Proton.Alpha(1, 0));\n      emitter.addBehaviour(new Proton.Scale(0.2, 1));\n      emitter.addBehaviour(this.createCustomBehaviour());\n      emitter.addBehaviour(new Proton.Color(this.colors, \"random\"));\n      emitter.emit();\n      this.proton.addEmitter(emitter);\n      var renderer = new Proton.CanvasRenderer(canvas);\n      this.proton.addRenderer(renderer);\n    }\n  }, {\n    key: \"createCustomBehaviour\",\n    value: function createCustomBehaviour() {\n      var f = 10 * 100;\n      return {\n        initialize: function initialize(particle) {\n          particle.f = new Proton.Vector2D(0, 0);\n        },\n        applyBehaviour: function applyBehaviour(particle) {\n          var length = particle.v.length() / 1000;\n          var gradient = particle.v.getGradient();\n          gradient += 3.14 / 2;\n          particle.f.x = f * length * Math.cos(gradient);\n          particle.f.y = f * length * Math.sin(gradient);\n          particle.a.add(particle.f);\n        }\n      };\n    }\n  }, {\n    key: \"renderProton\",\n    value: function renderProton() {\n      this.proton && this.proton.update();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Canvas, {\n        bg: this.props.bg,\n        globalCompositeOperation: \"xor\",\n        onCanvasInited: this.onCanvasInited.bind(this),\n        onResize: this.onResize.bind(this)\n      });\n    }\n  }]);\n  return Fountain;\n}(React.Component);\nvar ParticlesBg = function (_Component) {\n  inherits(ParticlesBg, _Component);\n  function ParticlesBg(props) {\n    classCallCheck(this, ParticlesBg);\n    return possibleConstructorReturn(this, (ParticlesBg.__proto__ || Object.getPrototypeOf(ParticlesBg)).call(this, props));\n  }\n  createClass(ParticlesBg, [{\n    key: \"getRandom\",\n    value: function getRandom() {\n      var _props = this.props,\n        num = _props.num,\n        bg = _props.bg,\n        color = _props.color;\n\n      // Code source from here, thanks author\n      // https://github.com/drawcall/Proton/blob/gh-pages/source/src/utils/Rand.js\n\n      if (!this.random) {\n        this.random = new Rand();\n        this.random.set(0.25, React.createElement(Color, {\n          num: num,\n          bg: bg,\n          color: color\n        }));\n        this.random.set(0.2, React.createElement(Ball, {\n          num: num,\n          bg: bg,\n          color: color\n        }));\n        this.random.set(0.2, React.createElement(Lines, {\n          num: num,\n          bg: bg,\n          color: color\n        }));\n        this.random.set(0.16, React.createElement(Thick, {\n          num: num,\n          bg: bg,\n          color: color\n        }));\n        this.random.set(0.18, React.createElement(Circle, {\n          num: num,\n          bg: bg,\n          color: color\n        }));\n        this.random.set(0.04, React.createElement(Cobweb, {\n          num: num,\n          bg: bg,\n          color: color\n        }));\n        this.random.set(0.1, React.createElement(Polygon, {\n          num: num,\n          bg: bg,\n          color: color\n        }));\n        this.random.set(0.08, React.createElement(Square, {\n          num: num,\n          bg: bg,\n          color: color\n        }));\n        this.random.set(0.18, React.createElement(Tadpole, {\n          num: num,\n          bg: bg,\n          color: color\n        }));\n        this.random.set(0.15, React.createElement(Fountain, {\n          num: num,\n          bg: bg,\n          color: color\n        }));\n      }\n      return this.random.getResult();\n    }\n  }, {\n    key: \"getBgParticles\",\n    value: function getBgParticles() {\n      var _props2 = this.props,\n        type = _props2.type,\n        num = _props2.num,\n        bg = _props2.bg,\n        color = _props2.color,\n        config = _props2.config;\n      var particles = void 0;\n      switch (String(type).toLowerCase()) {\n        case \"color\":\n          particles = React.createElement(Color, {\n            num: num,\n            bg: bg,\n            color: color\n          });\n          break;\n        case \"ball\":\n          particles = React.createElement(Ball, {\n            num: num,\n            bg: bg,\n            color: color\n          });\n          break;\n        case \"lines\":\n          particles = React.createElement(Lines, {\n            num: num,\n            bg: bg,\n            color: color\n          });\n          break;\n        case \"thick\":\n          particles = React.createElement(Thick, {\n            num: num,\n            bg: bg,\n            color: color\n          });\n          break;\n        case \"circle\":\n          particles = React.createElement(Circle, {\n            num: num,\n            bg: bg,\n            color: color\n          });\n          break;\n        case \"cobweb\":\n          particles = React.createElement(Cobweb, {\n            num: num,\n            bg: bg,\n            color: color\n          });\n          break;\n        case \"polygon\":\n          particles = React.createElement(Polygon, {\n            num: num,\n            bg: bg,\n            color: color\n          });\n          break;\n        case \"square\":\n          particles = React.createElement(Square, {\n            num: num,\n            bg: bg,\n            color: color\n          });\n          break;\n        case \"tadpole\":\n          particles = React.createElement(Tadpole, {\n            num: num,\n            bg: bg,\n            color: color\n          });\n          break;\n        case \"fountain\":\n          particles = React.createElement(Fountain, {\n            num: num,\n            bg: bg,\n            color: color\n          });\n          break;\n        case \"custom\":\n          particles = React.createElement(Color$1, {\n            bg: bg,\n            config: config\n          });\n          break;\n        case \"random\":\n          particles = this.getRandom(num);\n          break;\n        default:\n          particles = React.createElement(Color, {\n            num: num,\n            bg: bg,\n            color: color\n          });\n          break;\n      }\n      return particles;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var particles = this.getBgParticles();\n      return React.createElement(React.Fragment, null, particles);\n    }\n  }]);\n  return ParticlesBg;\n}(Component);\nexport default ParticlesBg;","map":{"version":3,"names":["Rand","list","probability","target","push","calculation","total","i","length","_i","obj","val","a","b","Math","random","Canvas","_React$Component","props","_iid","_oid","size","width","height","canvasRef","React","createRef","setTimeout","initCanvas","resize","_this2","bind","addEventListener","canvas","getCanvas","onCanvasDidMount","globalCompositeOperation","context","getContext","setCanvasSize","_setCanvasSize","heartbeatDetectionCanvasSize","onCanvasInited","current","setInterval","_this3","newHeight","clientHeight","_setCanvasSize2","onResize","removeEventListener","e","_setCanvasSize3","clientWidth","start","stop","bg","style","Object","assign","_typeof","onMouseDown","createElement","className","handleMouseDown","getStyle","Component","hexToRgb","hex","result","exec","parseInt","getColor","color","c","r","g","Ball","renderProton","_this","createProton","createMiniEmitter","add","remove","proton","destroy","Proton","emitter","Emitter","rate","Rate","num","Span","addInitialize","Mass","Radius","Life","Velocity","addBehaviour","Alpha","Color","Scale","Gravity","Collision","customDeadBehaviour","CrossZone","RectZone","p","x","min","max","y","emit","addEmitter","renderer","CanvasRenderer","onProtonUpdate","fillStyle","fillRect","addRenderer","initialize","particle","applyBehaviour","radius","miniEmitteing","dead","miniEmitter","radiusInitialize","V","colorBehaviour","reset","update","colors","Position","Infinity","easeOutCubic","Color$1","crossZoneBehaviour","zone","renderers","key","defaultVal","config","Array","isArray","getProp","rps","mass","life","body","position","v","tha","alpha","getArrProp","scale","cross","rotate","f","emitterV","FollowEmitter","Body","pos","alphaB","scaleB","colorB","Rotate","RandomDrift","G","F","createRenderer","onUpdate","onParticleCreated","onParticleUpdate","operation","Lines","backgroundColor","damping","mouseObj","attractionBehaviour","Attraction","beginPath","strokeStyle","lineWidth","moveTo","old","lineTo","closePath","stroke","Thick","hue","index","colorTemplate","CircleZone","repulsion","Repulsion","attraction","data","begin","MathUtil","randomAToB","PI","replace","ratio","cos","arc","fill","targetPosition","Square","dis","LineZone","getSpan","preEmit","CustomRenderer","clearRect","w","h","save","globalAlpha","translate","degreeTransform","rotation","rect","restore","Cobweb","pointZone","R","onProtonUpdateAfter","particles","j","pA","pB","distanceTo","Circle","Tadpole","mouseInfo","jointCount","delayTime","points","fillPointsData","unshift","pop","drawTadpoleHead","drawTadpoleTail","l","linearEvaluation","A","B","X","COLOR","Polygon","createEmitter","count","onParticleDead","drawPolygon","sin","mainEmitter","_ref","_ref$color","undefined","_ref$zone","once","_ref$once","_ref$alpha","gravity","_ref$gravity","pool","get","completed","radiusInit","expire","removeEmitter","oldRadius","emitterCount","Fountain","createCustomBehaviour","Vector2D","gradient","getGradient","ParticlesBg","_Component","_props","set","getResult","type","_props2","String","toLowerCase","getRandom","getBgParticles","Fragment"],"sources":["C:\\Users\\Welfred\\Desktop\\render-smart-brain\\node_modules\\particles-bg\\src\\utils\\Rand.js","C:\\Users\\Welfred\\Desktop\\render-smart-brain\\node_modules\\particles-bg\\src\\particles\\Canvas.jsx","C:\\Users\\Welfred\\Desktop\\render-smart-brain\\node_modules\\particles-bg\\src\\utils\\Color.js","C:\\Users\\Welfred\\Desktop\\render-smart-brain\\node_modules\\particles-bg\\src\\particles\\Ball.jsx","C:\\Users\\Welfred\\Desktop\\render-smart-brain\\node_modules\\particles-bg\\src\\particles\\Color.jsx","C:\\Users\\Welfred\\Desktop\\render-smart-brain\\node_modules\\particles-bg\\src\\particles\\Custom.jsx","C:\\Users\\Welfred\\Desktop\\render-smart-brain\\node_modules\\particles-bg\\src\\particles\\Lines.jsx","C:\\Users\\Welfred\\Desktop\\render-smart-brain\\node_modules\\particles-bg\\src\\particles\\Thick.jsx","C:\\Users\\Welfred\\Desktop\\render-smart-brain\\node_modules\\particles-bg\\src\\particles\\Square.jsx","C:\\Users\\Welfred\\Desktop\\render-smart-brain\\node_modules\\particles-bg\\src\\particles\\Cobweb.jsx","C:\\Users\\Welfred\\Desktop\\render-smart-brain\\node_modules\\particles-bg\\src\\particles\\Circle.jsx","C:\\Users\\Welfred\\Desktop\\render-smart-brain\\node_modules\\particles-bg\\src\\particles\\Tadpole.jsx","C:\\Users\\Welfred\\Desktop\\render-smart-brain\\node_modules\\particles-bg\\src\\particles\\Polygon.jsx","C:\\Users\\Welfred\\Desktop\\render-smart-brain\\node_modules\\particles-bg\\src\\particles\\Fountain.jsx","C:\\Users\\Welfred\\Desktop\\render-smart-brain\\node_modules\\particles-bg\\src\\index.js"],"sourcesContent":["// Code source from here, thanks author\n// https://github.com/drawcall/Proton/blob/gh-pages/source/src/utils/Rand.js\nclass Rand {\n\n  constructor() {\n      this.list = [];\n  }\n\n  set(probability, target) {\n      this.list.push({\n          probability,\n          target,\n          a: 0,\n          b: 1\n      });\n\n      this.calculation();\n  }\n\n  calculation() {\n      let total = 0;\n      for (let i = 0; i < this.list.length; i++) {\n          total += this.list[i].probability;\n      }\n\n      for (let i = 0; i < this.list.length; i++) {\n          const obj = this.list[i];\n          const val = obj.probability / total;\n\n          obj.a = i === 0 ? 0 : this.list[i - 1].b;\n          obj.b = obj.a + val;\n      }\n  }\n\n  getResult() {\n      const val = Math.random();\n      for (let i = 0; i < this.list.length; i++) {\n          const obj = this.list[i];\n\n          if (val <= obj.b && val > obj.a) {\n              return obj.target;\n          }\n      }\n\n      return this.list[0].target;\n  }\n};\n\nexport default Rand;\n","import React from \"react\";\nimport RAFManager from \"raf-manager\";\nexport default class Canvas extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this._iid = 0;\n    this._oid = 0;\n    this.size = { width: 0, height: 0 };\n    this.canvasRef = React.createRef();\n  }\n\n  componentDidMount() {\n    this._oid = setTimeout(() => {\n      this.initCanvas();\n      this.resize = this.resize.bind(this);\n      window.addEventListener(\"resize\", this.resize);\n    }, 100);\n\n    const canvas = this.getCanvas();\n    this.props.onCanvasDidMount && this.props.onCanvasDidMount(canvas);\n  }\n\n  initCanvas() {\n    const canvas = this.getCanvas();\n\n    if (this.props.globalCompositeOperation) {\n      const context = canvas.getContext(\"2d\");\n      context.globalCompositeOperation = this.props.globalCompositeOperation;\n    }\n\n    const { width, height } = this.setCanvasSize(canvas);\n    this.heartbeatDetectionCanvasSize(canvas);\n    this.props.onCanvasInited(canvas, width, height);\n  }\n\n  getCanvas(){\n    const canvas = this.canvasRef.current;\n    return canvas;\n  }\n\n  heartbeatDetectionCanvasSize(canvas) {\n    this._iid = setInterval(() => {\n      if(this.canvasRef.current){\n        const newHeight = this.canvasRef.current.clientHeight;\n        if (newHeight !== this.size.height) {\n          const { width, height } = this.setCanvasSize(canvas);\n          this.props.onResize && this.props.onResize(width, height);\n        }\n      }\n    }, 1000 / 10);\n  }\n\n  componentWillUnmount() {\n    try{\n      window.removeEventListener(\"resize\", this.resize);\n      clearInterval(this._iid);\n      clearTimeout(this._oid);\n    }catch(e){\n    }\n  }\n\n  resize() {\n    const canvas = this.getCanvas();\n    const { width, height } = this.setCanvasSize(canvas);\n    this.props.onResize && this.props.onResize(width, height);\n  }\n\n  setCanvasSize(canvas) {\n    const width = this.canvasRef.current.clientWidth;\n    const height = this.canvasRef.current.clientHeight;\n\n    this.size.width = width;\n    this.size.height = height;\n    canvas.width = width;\n    canvas.height = height;\n    return { width, height };\n  }\n\n  handleWaypointEnter() {\n    RAFManager.start();\n  }\n\n  handleWaypointLeave() {\n    RAFManager.stop();\n  }\n\n  getStyle() {\n    const { bg } = this.props;\n    let style = { width: \"100%\", height: \"100%\" };\n\n    if (bg === true) {\n      style = Object.assign(style, {\n        position: \"absolute\",\n        zIndex: -1,\n        top: 0,\n        left: 0\n      });\n    } else if(bg && typeof bg === \"object\") {\n      style = Object.assign(style, bg);\n    }\n\n    return style;\n  }\n\n  handleMouseDown(e) {\n    this.props.onMouseDown && this.props.onMouseDown(e);\n  }\n\n  render() {\n    return (\n      <canvas className=\"particles-bg-canvas-self\"\n        ref={this.canvasRef}\n        onMouseDown={this.handleMouseDown.bind(this)}\n        style={this.getStyle()}\n      />\n    );\n  }\n}\n","\nfunction hexToRgb(hex) {\n    var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n    return result ? {\n        r: parseInt(result[1], 16),\n        g: parseInt(result[2], 16),\n        b: parseInt(result[3], 16)\n    } : {};\n}\n\nfunction getColor(color, a) {\n    let c;\n    if (color) {\n        c = hexToRgb(color);\n        return `rgba(${c.r},${c.g},${c.b}, ${a})`;\n    } else {\n        return null;\n    }\n}\n\n\nexport { hexToRgb, getColor };","import React from \"react\";\nimport Proton from \"proton-engine\";\nimport RAFManager from \"raf-manager\";\nimport Canvas from \"./Canvas.jsx\";\nimport { getColor } from \"../utils/Color\";\n\nexport default class Ball extends React.Component {\n  constructor(props) {\n    super(props);\n    this.renderProton = this.renderProton.bind(this);\n  }\n\n  onCanvasInited(canvas, width, height) {\n    this.createProton(canvas, width, height);\n    this.createMiniEmitter(canvas);\n    RAFManager.add(this.renderProton);\n  }\n\n  componentWillUnmount() {\n    try {\n      RAFManager.remove(this.renderProton);\n      this.proton.destroy();\n    } catch (e) { }\n  }\n\n  onResize() { }\n\n  createProton(canvas, width, height) {\n    const context = canvas.getContext(\"2d\");\n    this.proton = new Proton();\n\n    const emitter = new Proton.Emitter();\n    emitter.rate = new Proton.Rate(\n      this.props.num ? new Proton.Span(this.props.num) : new Proton.Span(4, 9),\n      new Proton.Span(0.8, 1.3)\n    );\n\n    emitter.addInitialize(new Proton.Mass(1));\n    emitter.addInitialize(new Proton.Radius(1, 50));\n    emitter.addInitialize(new Proton.Life(5, 6));\n    emitter.addInitialize(\n      new Proton.Velocity(\n        new Proton.Span(5, 8),\n        new Proton.Span(30, 70),\n        \"polar\"\n      )\n    );\n\n    emitter.addBehaviour(new Proton.Alpha(1, 0));\n    emitter.addBehaviour(\n      new Proton.Color([\"#36aaf3\", \"#fd769c\", \"#94ff22\", \"#ffa545\", \"#ffffff\"])\n    );\n    emitter.addBehaviour(new Proton.Scale(0.7, 1));\n    emitter.addBehaviour(new Proton.Gravity(3));\n    emitter.addBehaviour(new Proton.Collision(emitter));\n    emitter.addBehaviour(this.customDeadBehaviour(canvas));\n    emitter.addBehaviour(\n      new Proton.CrossZone(\n        new Proton.RectZone(0, 0, canvas.width, canvas.height),\n        \"bound\"\n      )\n    );\n\n    emitter.p.x = Math.min(500, Math.max(canvas.width / 2 - 400, 50));\n    emitter.p.y = canvas.height / 2 + 50;\n    emitter.emit();\n    this.proton.addEmitter(emitter);\n\n    const renderer = new Proton.CanvasRenderer(canvas);\n    renderer.onProtonUpdate =  ()=> {\n      context.fillStyle = getColor(this.props.color, 0.2) || \"rgba(255, 255, 255, 0.2)\";\n      context.fillRect(0, 0, canvas.width, canvas.height);\n    };\n    this.proton.addRenderer(renderer);\n  }\n\n  customDeadBehaviour(canvas) {\n    return {\n      initialize: function (particle) { },\n      applyBehaviour: particle => {\n        if (particle.p.y + particle.radius >= canvas.height) {\n          if (particle.radius > 9) {\n            this.miniEmitteing(particle);\n            particle.dead = true;\n          }\n        }\n      }\n    };\n  }\n\n  createMiniEmitter(canvas) {\n    const miniEmitter = new Proton.Emitter();\n    miniEmitter.rate = new Proton.Rate(\n      new Proton.Span(3, 6),\n      new Proton.Span(1, 2)\n    );\n\n    miniEmitter.addInitialize(new Proton.Mass(1));\n    miniEmitter.radiusInitialize = new Proton.Radius();\n    miniEmitter.addInitialize(miniEmitter.radiusInitialize);\n    miniEmitter.addInitialize(new Proton.Life(0.5, 1));\n    miniEmitter.addInitialize(\n      new Proton.V(\n        new Proton.Span(1.5, 3),\n        new Proton.Span(0, 70, true),\n        \"polar\"\n      )\n    );\n\n    miniEmitter.colorBehaviour = new Proton.Color(\"#ffffff\");\n    miniEmitter.addBehaviour(new Proton.Alpha(1, 0));\n    miniEmitter.addBehaviour(miniEmitter.colorBehaviour);\n    miniEmitter.addBehaviour(new Proton.Gravity(4));\n    miniEmitter.addBehaviour(new Proton.Collision(miniEmitter));\n    miniEmitter.addBehaviour(\n      new Proton.CrossZone(\n        new Proton.RectZone(0, 0, canvas.width, canvas.height),\n        \"bound\"\n      )\n    );\n    this.proton.addEmitter(miniEmitter);\n\n    this.miniEmitter = miniEmitter;\n  }\n\n  miniEmitteing(particle) {\n    const miniEmitter = this.miniEmitter;\n    miniEmitter.radiusInitialize.reset(\n      particle.radius * 0.05,\n      particle.radius * 0.2\n    );\n    miniEmitter.colorBehaviour.reset(particle.color);\n    miniEmitter.p.x = particle.p.x;\n    miniEmitter.p.y = particle.p.y;\n    miniEmitter.emit(\"once\");\n  }\n\n  renderProton() {\n    this.proton && this.proton.update();\n  }\n\n  render() {\n    return (\n      <Canvas bg={this.props.bg}\n        globalCompositeOperation=\"darker\"\n        onCanvasInited={this.onCanvasInited.bind(this)}\n        onResize={this.onResize.bind(this)}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport Proton from \"proton-engine\";\nimport RAFManager from \"raf-manager\";\nimport Canvas from \"./Canvas.jsx\";\n\nexport default class Color extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.colors = [\n      \"#529B88\",\n      \"#CDD180\",\n      \"#FFFA32\",\n      \"#FB6255\",\n      \"#FB4A53\",\n      \"#FF4E50\",\n      \"#F9D423\"\n    ];\n    this.renderProton = this.renderProton.bind(this);\n  }\n\n  componentWillUnmount() {\n    try {\n      RAFManager.remove(this.renderProton);\n      this.proton.destroy();\n    } catch (e) {}\n  }\n\n  onCanvasInited(canvas, width, height) {\n    this.createProton(canvas, width, height);\n    RAFManager.add(this.renderProton);\n  }\n\n  onResize() {}\n\n  createProton(canvas, width, height) {\n    this.proton = new Proton();\n    const emitter = new Proton.Emitter();\n    emitter.rate = new Proton.Rate(\n      this.props.num ? new Proton.Span(this.props.num) : new Proton.Span(5, 8),\n      new Proton.Span(0.1, 0.25)\n    );\n\n    emitter.addInitialize(new Proton.Mass(1));\n    emitter.addInitialize(new Proton.Radius(20, 200));\n    emitter.addInitialize(new Proton.Life(2, 4));\n    emitter.addInitialize(\n      new Proton.Position(new Proton.RectZone(0, 0, width, height))\n    );\n\n    emitter.addBehaviour(new Proton.Alpha(0, 1, Infinity, Proton.easeOutCubic));\n    emitter.addBehaviour(new Proton.Scale(1, 0, Infinity, Proton.easeOutCubic));\n    emitter.addBehaviour(new Proton.Color(this.colors, \"random\"));\n\n    emitter.emit();\n    this.proton.addEmitter(emitter);\n\n    const renderer = new Proton.CanvasRenderer(canvas);\n    this.proton.addRenderer(renderer);\n  }\n\n  renderProton() {\n    this.proton && this.proton.update();\n  }\n\n  render() {\n    return (\n      <Canvas bg={this.props.bg}\n        globalCompositeOperation=\"darker\"\n        onCanvasInited={this.onCanvasInited.bind(this)}\n        onResize={this.onResize.bind(this)}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport Proton from \"proton-engine\";\nimport RAFManager from \"raf-manager\";\nimport Canvas from \"./Canvas.jsx\";\n\nexport default class Color extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.colors = [\n            \"#529B88\",\n            \"#CDD180\",\n            \"#FFFA32\",\n            \"#FB6255\",\n            \"#FB4A53\",\n            \"#FF4E50\",\n            \"#F9D423\"\n        ];\n        this.renderProton = this.renderProton.bind(this);\n    }\n\n    componentWillUnmount() {\n        try {\n            RAFManager.remove(this.renderProton);\n            this.proton.destroy();\n        } catch (e) { }\n    }\n\n    onCanvasInited(canvas, width, height) {\n        this.createProton(canvas, width, height);\n        RAFManager.add(this.renderProton);\n    }\n\n    onResize(width, height) {\n        this.crossZoneBehaviour.zone.width = width;\n        this.crossZoneBehaviour.zone.height = height;\n        this.proton.renderers[0].resize(width, height);;\n    }\n\n    getProp(key, defaultVal) {\n        const config = this.props.config || {};\n        const val = config[key] || defaultVal;\n        if (Array.isArray(val)) {\n            return new Proton.Span(val[0], val[1]);\n        } else {\n            return val;\n        }\n    }\n\n    getArrProp(key, defaultVal) {\n        const config = this.props.config || {};\n        const val = config[key] || defaultVal;\n        if (!val) return null;\n\n        if (Array.isArray(val)) {\n            return val;\n        } else {\n            return [val, val];\n        }\n    }\n\n    createProton(canvas, width, height) {\n        const num = this.getProp(\"num\", [5, 8]);\n        const rps = this.getProp(\"rps\", [0.1, 0.2]);\n        const mass = this.getProp(\"mass\", 1);\n        const radius = this.getProp(\"radius\", [10, 30]);\n        const life = this.getProp(\"life\", [2, 3]);\n        const body = this.getProp(\"body\");\n        const position = this.getProp(\"position\");\n        const v = this.getProp(\"v\", [2, 3]);\n        const tha = this.getProp(\"tha\", [-15, 15]);\n        const alpha = this.getArrProp(\"alpha\");\n        const scale = this.getArrProp(\"scale\");\n        const color = this.getArrProp(\"color\");\n        const cross = this.getProp(\"cross\", \"dead\");\n        const random = this.getProp(\"random\");\n        const rotate = this.getArrProp(\"rotate\");\n        const g = this.getProp(\"g\");\n        const f = this.getArrProp(\"f\");\n        const emitterV = this.getProp(\"emitter\");\n\n        this.proton = new Proton();\n        let emitter;\n        if (emitterV === \"follow\") {\n            emitter = new Proton.FollowEmitter();\n        } else {\n            emitter = new Proton.Emitter();\n        }\n        emitter.rate = new Proton.Rate(num, rps);\n\n        emitter.addInitialize(new Proton.Mass(mass));\n        emitter.addInitialize(new Proton.Radius(radius));\n        emitter.addInitialize(new Proton.Life(life));\n        emitter.addInitialize(new Proton.Velocity(v, tha, \"polar\"));\n        if (body) emitter.addInitialize(new Proton.Body(body));\n\n        let pos;\n        if (position === \"all\" || position === \"screen\") {\n            pos = new Proton.Position(new Proton.RectZone(0, 0, canvas.width, canvas.height))\n        } else if (typeof position === \"object\") {\n            pos = new Proton.Position(new Proton.RectZone(position.x, position.y, position.width, position.height))\n        } else {\n            emitter.p.x = canvas.width / 2;\n            emitter.p.y = canvas.height / 2;\n        }\n\n        emitter.addInitialize(pos);\n\n        /// behaviour\n        const alphaB = alpha ? new Proton.Alpha(alpha[0], alpha[1]) : new Proton.Alpha(0, 1);\n        const scaleB = scale ? new Proton.Scale(scale[0], scale[1]) : new Proton.Scale(1, 0.2);\n        const colorB = color ? new Proton.Color(color[0], color[1]) : new Proton.Color(this.colors);\n\n        emitter.addBehaviour(alphaB);\n        emitter.addBehaviour(scaleB);\n        if(!body) emitter.addBehaviour(colorB);\n\n        if(rotate){\n            if(rotate[0]===true||rotate[0]===\"rotate\"){\n                emitter.addBehaviour(new Proton.Rotate());\n            }else{\n                emitter.addBehaviour(new Proton.Rotate(rotate[0], rotate[1]));\n            }\n        }\n\n        const zone = new Proton.RectZone(0, 0, canvas.width, canvas.height)\n        const crossZoneBehaviour = new Proton.CrossZone(zone, cross);\n        emitter.addBehaviour(crossZoneBehaviour);\n\n        random && emitter.addBehaviour(new Proton.RandomDrift(random, random, 0.05));\n        g && emitter.addBehaviour(new Proton.G(g));\n        f && emitter.addBehaviour(new Proton.F(f[0], f[1]));\n\n        emitter.emit();\n        this.proton.addEmitter(emitter);\n\n        const renderer = this.createRenderer(canvas);\n        this.proton.addRenderer(renderer);\n\n        this.emitter = emitter;\n        this.crossZoneBehaviour = crossZoneBehaviour;\n    }\n\n    createRenderer(canvas) {\n        const width = canvas.width;\n        const height = canvas.height;\n        const context = canvas.getContext(\"2d\");\n        const renderer = new Proton.CanvasRenderer(canvas);\n\n        const onUpdate = this.getProp(\"onUpdate\");\n        if (onUpdate) {\n            renderer.onProtonUpdate = () => {\n                onUpdate(context, width, height);\n            };\n        }\n\n        const onParticleCreated = this.getProp(\"onParticleCreated\");\n        if (onParticleCreated) {\n            renderer.onParticleCreated = (particle) => {\n                onParticleCreated(context, particle);\n            };\n        }\n\n        const onParticleUpdate = this.getProp(\"onParticleUpdate\");\n        if (onParticleUpdate) {\n            renderer.onParticleUpdate = (particle) => {\n                onParticleUpdate(context, particle);\n            };\n        }\n\n        return renderer;\n    }\n\n    renderProton() {\n        this.proton && this.proton.update();\n    }\n\n    handleMouseDown(e) {\n        const onMouseDown = this.getProp(\"onMouseDown\");\n        if (onMouseDown) {\n            onMouseDown(e);\n        }\n    }\n\n    render() {\n        const globalCompositeOperation = this.props.globalCompositeOperation || this.props.operation || \"source-over\";\n\n        return (\n            <Canvas\n                bg={this.props.bg}\n                onMouseDown={this.handleMouseDown.bind(this)}\n                globalCompositeOperation={globalCompositeOperation}\n                onCanvasInited={this.onCanvasInited.bind(this)}\n                onResize={this.onResize.bind(this)}\n            />\n        );\n    }\n}\n","import React from \"react\";\nimport Proton from \"proton-engine\";\nimport RAFManager from \"raf-manager\";\nimport Canvas from \"./Canvas.jsx\";\nimport { getColor } from \"../utils/Color\";\n\nexport default class Lines extends React.Component {\n  constructor(props) {\n    super(props);\n    this.renderProton = this.renderProton.bind(this);\n  }\n\n  onCanvasDidMount(canvas){\n    if(this.props.color){\n      canvas.style.backgroundColor = this.props.color;\n    }\n  }\n\n  componentWillUnmount() {\n    try {\n      RAFManager.remove(this.renderProton);\n      this.proton.destroy();\n    } catch (e) { }\n  }\n\n  onCanvasInited(canvas, width, height) {\n    this.createProton(canvas, width, height);\n    RAFManager.add(this.renderProton);\n  }\n\n  onResize(width, height) {\n    this.crossZoneBehaviour.zone.width = width;\n    this.crossZoneBehaviour.zone.height = height;\n    this.proton.renderers[0].resize(width, height);\n  }\n\n  createProton(canvas, width, height) {\n    this.proton = new Proton();\n\n    const emitter = new Proton.Emitter();\n    emitter.damping = 0.008;\n    emitter.rate = new Proton.Rate(this.props.num ? this.props.num : 250);\n    emitter.addInitialize(new Proton.Mass(1));\n    emitter.addInitialize(new Proton.Radius(4));\n    emitter.addInitialize(\n      new Proton.Velocity(\n        new Proton.Span(1.5),\n        new Proton.Span(0, 360),\n        \"polar\"\n      )\n    );\n    const mouseObj = {\n      x: width / 2,\n      y: height / 2\n    };\n\n    const attractionBehaviour = new Proton.Attraction(mouseObj, 0, 0);\n    const crossZoneBehaviour = new Proton.CrossZone(\n      new Proton.RectZone(0, 0, canvas.width, canvas.height),\n      \"cross\"\n    );\n    emitter.addBehaviour(new Proton.Color(\"random\"));\n    emitter.addBehaviour(attractionBehaviour, crossZoneBehaviour);\n    emitter.addBehaviour(new Proton.RandomDrift(10, 10, 0.05));\n    emitter.p.x = canvas.width / 2;\n    emitter.p.y = canvas.height / 2;\n    emitter.emit(\"once\");\n\n    this.proton.addEmitter(emitter);\n    this.proton.addRenderer(this.createRenderer(canvas));\n    this.crossZoneBehaviour = crossZoneBehaviour;\n  }\n\n  createRenderer(canvas) {\n    const context = canvas.getContext(\"2d\");\n    const renderer = new Proton.CanvasRenderer(canvas);\n    renderer.onProtonUpdate = () => {\n      context.fillStyle = getColor(this.props.color, 0.02) || \"rgba(0, 0, 0, 0.02)\";\n      context.fillRect(0, 0, canvas.width, canvas.height);\n    };\n\n    renderer.onParticleUpdate = function (particle) {\n      context.beginPath();\n      context.strokeStyle = particle.color;\n      context.lineWidth = 1;\n      context.moveTo(particle.old.p.x, particle.old.p.y);\n      context.lineTo(particle.p.x, particle.p.y);\n      context.closePath();\n      context.stroke();\n    };\n\n    return renderer;\n  }\n\n  renderProton() {\n    this.proton && this.proton.update();\n  }\n\n  render() {\n    return (\n      <Canvas bg={this.props.bg}\n        globalCompositeOperation=\"darker\"\n        onCanvasDidMount={this.onCanvasDidMount.bind(this)}\n        onCanvasInited={this.onCanvasInited.bind(this)}\n        onResize={this.onResize.bind(this)}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport Proton from \"proton-engine\";\nimport RAFManager from \"raf-manager\";\nimport Canvas from \"./Canvas.jsx\";\nimport { getColor } from \"../utils/Color\";\n\nexport default class Thick extends React.Component {\n  constructor(props) {\n    super(props);\n    this.hue = 0;\n    this.index = 0;\n    this.colorTemplate = `hsla(hue,80%,50%, 0.75)`;\n    this.renderProton = this.renderProton.bind(this);\n  }\n\n  onCanvasDidMount(canvas){\n    if(this.props.color){\n      canvas.style.backgroundColor = this.props.color;\n    }\n  }\n\n  onCanvasInited(canvas, width, height) {\n    this.canvas = canvas;\n    this.createProton(canvas, width, height);\n    RAFManager.add(this.renderProton);\n  }\n\n  onResize(width, height) {\n    this.crossZoneBehaviour.zone.width = width;\n    this.crossZoneBehaviour.zone.height = height;\n    this.proton.renderers[0].resize(width, height);\n  }\n\n  createProton(canvas, width, height) {\n    this.proton = new Proton();\n\n    const emitter = new Proton.Emitter();\n    emitter.damping = 0.008;\n    emitter.rate = new Proton.Rate(this.props.num ? this.props.num : 150);\n\n    // Initialize\n    emitter.addInitialize(new Proton.Mass(1));\n    emitter.addInitialize(new Proton.Radius(8));\n    emitter.addInitialize(\n      new Proton.V(new Proton.Span(0.1, 0.5), new Proton.Span(0, 360), \"polar\")\n    );\n    emitter.addInitialize(\n      new Proton.Position(\n        new Proton.CircleZone(canvas.width / 2, canvas.height / 2, 100)\n      )\n    );\n\n    // Behaviour\n    const crossZoneBehaviour = new Proton.CrossZone(\n      new Proton.RectZone(0, 0, canvas.width, canvas.height),\n      \"cross\"\n    );\n    emitter.addBehaviour(crossZoneBehaviour);\n    this.repulsion = new Proton.Repulsion(\n      {\n        x: canvas.width / 2,\n        y: canvas.height / 2 - 100\n      },\n      3,\n      300\n    );\n\n    this.attraction = new Proton.Attraction(\n      {\n        x: canvas.width / 2,\n        y: canvas.height / 2\n      },\n      3,\n      200\n    );\n    emitter.addBehaviour(this.attraction, this.repulsion);\n    emitter.addBehaviour(new Proton.Color(\"random\"));\n    emitter.addBehaviour(new Proton.RandomDrift(20, 15, 0.15));\n\n    emitter.emit(\"once\");\n    this.proton.addEmitter(emitter);\n    this.proton.addRenderer(this.createRenderer(canvas));\n    this.crossZoneBehaviour = crossZoneBehaviour;\n  }\n\n  createRenderer(canvas) {\n    const context = canvas.getContext(\"2d\");\n    const renderer = new Proton.CanvasRenderer(canvas);\n\n    renderer.onProtonUpdate = () => {\n      this.hue += 1;\n      context.fillStyle = getColor(this.props.color, 0.02) || \"rgba(0, 0, 0, 0.02)\";\n      context.fillRect(0, 0, canvas.width, canvas.height);\n    };\n\n    renderer.onParticleCreated = particle => {\n      particle.data.begin = Proton.MathUtil.randomAToB(1, 120);\n      particle.data.tha = Proton.MathUtil.randomAToB(0, Math.PI * 2);\n    };\n\n    renderer.onParticleUpdate = particle => {\n      const hue = particle.data.begin + this.hue;\n      particle.color = this.colorTemplate.replace(\"hue\", hue % 360);\n\n      const ratio = 3 / 4;\n      const radius =\n        particle.radius * (1 - ratio) * Math.cos((particle.data.tha += 0.01)) +\n        particle.radius * ratio;\n\n      context.beginPath();\n      context.fillStyle = particle.color;\n      context.arc(particle.p.x, particle.p.y, radius, 0, Math.PI * 2, true);\n      context.closePath();\n      context.fill();\n    };\n\n    return renderer;\n  }\n\n  componentWillUnmount() {\n    try {\n      RAFManager.remove(this.renderProton);\n      this.proton.destroy();\n    } catch (e) {}\n  }\n\n  renderProton() {\n    const canvas = this.canvas;\n    this.proton.update();\n    if (this.index % 200 === 0) {\n      this.attraction.targetPosition.x = Math.random() * canvas.width;\n      this.attraction.targetPosition.y = Math.random() * canvas.height;\n\n      this.repulsion.targetPosition.x = Math.random() * canvas.width;\n      this.repulsion.targetPosition.y = Math.random() * canvas.height;\n    }\n\n    this.index++;\n  }\n\n  render() {\n    return (\n      <Canvas bg={this.props.bg}\n        onCanvasDidMount={this.onCanvasDidMount.bind(this)}\n        onCanvasInited={this.onCanvasInited.bind(this)}\n        onResize={this.onResize.bind(this)}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport Proton from \"proton-engine\";\nimport RAFManager from \"raf-manager\";\nimport Canvas from \"./Canvas.jsx\";\n\nexport default class Square extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.colors = [\n      \"#fad390\",\n      \"#81ecec\",\n      \"#ffffff\",\n      \"#badc58\",\n      \"#f9ca24\",\n      \"#FEA47F\"\n    ];\n    this.renderProton = this.renderProton.bind(this);\n  }\n\n  componentWillUnmount() {\n    try {\n      RAFManager.remove(this.renderProton);\n      this.proton.destroy();\n    } catch (e) {}\n  }\n\n  onCanvasDidMount(canvas) {\n    \n  }\n\n  onCanvasInited(canvas, width, height) {\n    this.createProton(canvas, width, height);\n    RAFManager.add(this.renderProton);\n  }\n\n  onResize(width, height) {\n    const dis = 150;\n    this.crossZoneBehaviour.zone.width = width + 2 * dis;\n    this.crossZoneBehaviour.zone.height = height + 2 * dis;\n    this.proton.renderers[0].resize(width, height);\n  }\n\n  createProton(canvas, width, height) {\n    this.proton = new Proton();\n    const emitter = new Proton.Emitter();\n    emitter.rate = new Proton.Rate(this.props.num ? this.props.num : 50);\n    emitter.damping = 0;\n\n    emitter.addInitialize(new Proton.Mass(1));\n    emitter.addInitialize(new Proton.Radius(4, 70));\n    emitter.addInitialize(\n      new Proton.Velocity(new Proton.Span(2, 10), new Proton.Span(0), \"polar\")\n    );\n    emitter.addInitialize(\n      new Proton.Position(\n        new Proton.LineZone(0, canvas.height, canvas.width, canvas.height)\n      )\n    );\n\n    const dis = 150;\n    const crossZoneBehaviour = new Proton.CrossZone(\n      new Proton.RectZone(\n        0 - dis,\n        0 - dis,\n        canvas.width + 2 * dis,\n        canvas.height + 2 * dis\n      ),\n      \"cross\"\n    );\n    emitter.addBehaviour(crossZoneBehaviour);\n    emitter.addBehaviour(new Proton.Alpha(Proton.getSpan(0.1, 0.55)));\n    emitter.addBehaviour(new Proton.Color(this.colors));\n\n    emitter.emit(\"once\");\n    this.proton.addEmitter(emitter);\n    const renderer = this.createRenderer(canvas);\n    this.proton.addRenderer(renderer);\n\n    this.crossZoneBehaviour = crossZoneBehaviour;\n    emitter.preEmit(2);\n  }\n\n  createRenderer(canvas) {\n    const context = canvas.getContext(\"2d\");\n    const renderer = new Proton.CustomRenderer();\n\n    renderer.onProtonUpdate = () => {\n      context.clearRect(0, 0, canvas.width, canvas.height);\n    };\n\n    renderer.onParticleCreated = particle => {\n      const w = particle.radius || 60;\n      const h = Proton.MathUtil.randomAToB(100, 200, \"int\");\n      particle.data.w = w;\n      particle.data.h = h;\n    };\n\n    renderer.onParticleUpdate = particle => {\n      const w = particle.data.w;\n      const h = particle.data.h;\n      context.save();\n      context.globalAlpha = particle.alpha;\n      context.fillStyle = particle.color;\n\n      context.translate(particle.p.x, particle.p.y);\n      context.rotate(Proton.MathUtil.degreeTransform(particle.rotation));\n      context.translate(-particle.p.x, -particle.p.y);\n\n      context.beginPath();\n      context.rect(particle.p.x - w / 2, particle.p.y - h / 2, w, h);\n\n      context.closePath();\n      context.fill();\n      context.globalAlpha = 1;\n      context.restore();\n    };\n\n    return renderer;\n  }\n\n  renderProton() {\n    this.proton && this.proton.update();\n  }\n\n  render() {\n    return (\n      <Canvas bg={this.props.bg}\n        globalCompositeOperation=\"lighter\"\n        onCanvasDidMount={this.onCanvasDidMount.bind(this)}\n        onCanvasInited={this.onCanvasInited.bind(this)}\n        onResize={this.onResize.bind(this)}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport Proton from \"proton-engine\";\nimport RAFManager from \"raf-manager\";\nimport Canvas from \"./Canvas.jsx\";\nimport { getColor } from \"../utils/Color\";\n\nexport default class Cobweb extends React.Component {\n  constructor(props) {\n    super(props);\n    this.renderProton = this.renderProton.bind(this);\n  }\n\n  onCanvasInited(canvas, width, height) {\n    this.createProton(canvas, width, height);\n    RAFManager.add(this.renderProton);\n  }\n\n  componentWillUnmount() {\n    try {\n      RAFManager.remove(this.renderProton);\n      this.proton.destroy();\n    } catch (e) {}\n  }\n\n  onResize(width, height) {\n    this.crossZoneBehaviour.zone.width = width;\n    this.crossZoneBehaviour.zone.height = height;\n    this.proton.renderers[0].resize(width, height);\n  }\n\n  createProton(canvas, width, height) {\n    this.proton = new Proton();\n\n    const emitter = new Proton.Emitter();\n    emitter.rate = new Proton.Rate(\n      this.props.num ? new Proton.Span(this.props.num) : new Proton.Span(100),\n      new Proton.Span(0.05, 0.2)\n    );\n\n    emitter.addInitialize(new Proton.Mass(1));\n    emitter.addInitialize(new Proton.Radius(1, 4));\n    emitter.addInitialize(new Proton.Life(Infinity));\n\n    const pointZone = new Proton.Position(\n      new Proton.RectZone(0, 0, width, height)\n    );\n    emitter.addInitialize(pointZone);\n    emitter.addInitialize(\n      new Proton.Velocity(\n        new Proton.Span(0.3, 0.6),\n        new Proton.Span(0, 360),\n        \"polar\"\n      )\n    );\n\n    emitter.addBehaviour(new Proton.Alpha(Proton.getSpan(0.2, 0.9)));\n    emitter.addBehaviour(new Proton.Color(this.props.color || \"#333\"));\n    this.crossZoneBehaviour = new Proton.CrossZone(\n      new Proton.RectZone(0, 0, width, height),\n      \"cross\"\n    );\n    emitter.addBehaviour(this.crossZoneBehaviour);\n\n    emitter.emit(\"once\");\n    emitter.damping = 0;\n    this.proton.addEmitter(emitter);\n    this.proton.addRenderer(this.createRenderer(canvas, emitter));\n  }\n\n  createRenderer(canvas, emitter) {\n    const context = canvas.getContext(\"2d\");\n    const renderer = new Proton.CanvasRenderer(canvas);\n    const R = 140;\n\n    renderer.onProtonUpdateAfter = ()=> {\n      let particles = emitter.particles;\n\n      for (let i = 0; i < particles.length; i++) {\n        for (let j = i + 1; j < particles.length; j++) {\n          let pA = particles[i];\n          let pB = particles[j];\n          let dis = pA.p.distanceTo(pB.p);\n\n          if (dis < R) {\n            let alpha = (1 - dis / R) * 0.5;\n            context.strokeStyle = getColor(this.props.color, alpha) || `rgba(3, 3, 3, ${alpha})`;\n            context.beginPath();\n            context.moveTo(pA.p.x, pA.p.y);\n            context.lineTo(pB.p.x, pB.p.y);\n            context.closePath();\n            context.stroke();\n          }\n        }\n      }\n    };\n\n    return renderer;\n  }\n\n  renderProton() {\n    this.proton && this.proton.update();\n  }\n\n  render() {\n    return (\n      <Canvas bg={this.props.bg}\n        globalCompositeOperation=\"darker\"\n        onCanvasInited={this.onCanvasInited.bind(this)}\n        onResize={this.onResize.bind(this)}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport Proton from \"proton-engine\";\nimport RAFManager from \"raf-manager\";\nimport Canvas from \"./Canvas.jsx\";\n\nexport default class Circle extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.colors = [\n      \"#74b9ff\",\n      \"#e84393\",\n      \"#6c5ce7\",\n      \"#00b894\",\n      \"#fdcb6e\",\n      \"#006266\",\n      \"#1B1464\"\n    ];\n\n    this.renderProton = this.renderProton.bind(this);\n  }\n\n  componentWillUnmount() {\n    try {\n      RAFManager.remove(this.renderProton);\n      this.proton.destroy();\n    } catch (e) { }\n  }\n\n  onCanvasInited(canvas, width, height) {\n    this.createProton(canvas, width, height);\n    RAFManager.add(this.renderProton);\n  }\n\n  onResize(width, height) {\n    this.crossZoneBehaviour.zone.width = width;\n    this.crossZoneBehaviour.zone.height = height;\n    this.proton.renderers[0].resize(width, height);\n  }\n\n  createProton(canvas, width, height) {\n    this.proton = new Proton();\n\n    const emitter = new Proton.Emitter();\n    emitter.rate = new Proton.Rate(this.props.num || 20);\n    emitter.damping = 0.008;\n\n    emitter.addInitialize(new Proton.Mass(1));\n    emitter.addInitialize(new Proton.Radius(30, 600));\n    emitter.addInitialize(\n      new Proton.Velocity(\n        new Proton.Span(0.5),\n        new Proton.Span(0, 360),\n        \"polar\"\n      )\n    );\n    emitter.addInitialize(\n      new Proton.Position(\n        new Proton.RectZone(0, 0, canvas.width, canvas.height)\n      )\n    );\n\n    const crossZoneBehaviour = new Proton.CrossZone(\n      new Proton.RectZone(0, 0, canvas.width, canvas.height),\n      \"cross\"\n    );\n    emitter.addBehaviour(crossZoneBehaviour);\n    emitter.addBehaviour(new Proton.Alpha(Proton.getSpan(0.35, 0.55)));\n    emitter.addBehaviour(new Proton.Color(this.getColor()));\n    emitter.addBehaviour(new Proton.RandomDrift(50, 50, 0.5));\n\n    emitter.emit(\"once\");\n    this.proton.addEmitter(emitter);\n\n    const renderer = new Proton.CanvasRenderer(canvas);\n    this.proton.addRenderer(renderer);\n\n    this.crossZoneBehaviour = crossZoneBehaviour;\n  }\n\n  getColor() {\n    let c = this.colors;\n    if (this.props.color) {\n      if(Array.isArray(this.props.color)){\n        c = this.props.color;\n      }else{\n        c = [this.props.color];\n      }\n    }\n\n    return c;\n  }\n\n  renderProton() {\n    this.proton && this.proton.update();\n  }\n\n  render() {\n    return (\n      <Canvas bg={this.props.bg}\n        globalCompositeOperation=\"darken\"\n        onCanvasInited={this.onCanvasInited.bind(this)}\n        onResize={this.onResize.bind(this)}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport Proton from \"proton-engine\";\nimport RAFManager from \"raf-manager\";\nimport Canvas from \"./Canvas.jsx\";\n\nexport default class Tadpole extends React.Component {\n  constructor(props) {\n    super(props);\n    this.renderProton = this.renderProton.bind(this);\n  }\n\n  onCanvasDidMount(canvas) {\n\n  }\n\n  onCanvasInited(canvas, width, height) {\n    this.createProton(canvas, width, height);\n    this.renderProton();\n  }\n\n  onResize(width, height) {\n    this.crossZoneBehaviour.zone.width = width;\n    this.crossZoneBehaviour.zone.height = height;\n    this.proton.renderers[0].resize(width, height);\n  }\n\n  createProton(canvas, width, height) {\n    this.proton = new Proton();\n\n    const emitter = new Proton.Emitter();\n    emitter.damping = 0.008;\n    emitter.rate = new Proton.Rate(this.props.num ? this.props.num : 50);\n    emitter.addInitialize(new Proton.Mass(1));\n    emitter.addInitialize(new Proton.Radius(5, 9));\n    emitter.addInitialize(\n      new Proton.Velocity(\n        new Proton.Span(1.5),\n        new Proton.Span(0, 360),\n        \"polar\"\n      )\n    );\n    emitter.addInitialize(\n      new Proton.Position(new Proton.RectZone(0, 0, width, height))\n    );\n\n    const mouseInfo = {\n      x: width / 2,\n      y: height / 2\n    };\n\n    const attractionBehaviour = new Proton.Attraction(mouseInfo, 0, 0);\n    const crossZoneBehaviour = new Proton.CrossZone(\n      new Proton.RectZone(0, 0, canvas.width, canvas.height),\n      \"bound\"\n    );\n    emitter.addBehaviour(new Proton.Color(this.props.color || \"#bbb\"));\n    //emitter.addBehaviour(new Proton.Alpha(new Proton.Span(0.5, 1)));\n    emitter.addBehaviour(attractionBehaviour, crossZoneBehaviour);\n    emitter.addBehaviour(new Proton.RandomDrift(15, 15, 0.05));\n    emitter.emit(\"once\");\n\n    this.proton.addEmitter(emitter);\n    this.proton.addRenderer(this.createRenderer(canvas));\n    this.crossZoneBehaviour = crossZoneBehaviour;\n  }\n\n  createRenderer(canvas) {\n    const jointCount = 10;\n    const delayTime = 8;\n    const context = canvas.getContext(\"2d\");\n    const renderer = new Proton.CanvasRenderer(canvas);\n\n    renderer.onProtonUpdate = function () {\n      context.clearRect(0, 0, canvas.width, canvas.height);\n    };\n\n    renderer.onParticleCreated = particle => {\n      particle.data.points = [];\n      particle.data.index = 0;\n    };\n\n    renderer.onParticleUpdate = function (particle) {\n      drawTadpoleTail(particle);\n      if (particle.data.index % delayTime === 0) fillPointsData(particle);\n      drawTadpoleHead(particle);\n      particle.data.index++;\n    };\n\n    const fillPointsData = particle => {\n      particle.data.points.unshift(particle.p.y);\n      particle.data.points.unshift(particle.p.x);\n\n      if (particle.data.points.length > jointCount) {\n        particle.data.points.pop();\n        particle.data.points.pop();\n      }\n    };\n\n    const drawTadpoleHead = particle => {\n      context.fillStyle = particle.color;\n      context.beginPath();\n      context.arc(\n        particle.p.x,\n        particle.p.y,\n        particle.radius,\n        0,\n        Math.PI * 2,\n        true\n      );\n      context.closePath();\n      context.fill();\n    };\n\n    const drawTadpoleTail = particle => {\n      context.beginPath();\n      context.strokeStyle = particle.color;\n\n      context.moveTo(particle.p.x, particle.p.y);\n\n      const l = particle.data.points.length;\n      for (let i = 0; i < l; i += 2) {\n        const x = particle.data.points[i];\n        const y = particle.data.points[i + 1];\n\n        context.lineWidth = linearEvaluation(i, l);\n        context.lineTo(x, y);\n        context.stroke();\n      }\n    };\n\n    const linearEvaluation = (i, l) => {\n      if (l <= 2) return 1;\n\n      const max = 6;\n      const A = (max - 1) / (2 / l - 1);\n      const B = 1 - A;\n      const X = (i + 2) / l;\n      let val = A * X + B;\n      val = val >> 0;\n\n      return val;\n    };\n\n    return renderer;\n  }\n\n  renderProton() {\n    RAFManager.add(() => {\n      this.proton.update();\n      //this.proton.stats.update();\n    });\n  }\n\n  render() {\n    return (\n      <Canvas bg={this.props.bg}\n        globalCompositeOperation=\"darker\"\n        onCanvasDidMount={this.onCanvasDidMount.bind(this)}\n        onCanvasInited={this.onCanvasInited.bind(this)}\n        onResize={this.onResize.bind(this)}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport Proton from \"proton-engine\";\nimport RAFManager from \"raf-manager\";\nimport Canvas from \"./Canvas.jsx\";\n\nconst COLOR = [\n  \"#f6b93b\",\n  \"#18dcff\",\n  \"#cd84f1\",\n  \"#ED4C67\",\n  \"#ffffff\",\n  \"#b71540\",\n  \"#32ff7e\",\n  \"#ff3838\"\n];\n\nexport default class Polygon extends React.Component {\n  constructor(props) {\n    super(props);\n    this.renderProton = this.renderProton.bind(this);\n  }\n\n  onCanvasInited(canvas, width, height) {\n    this.createProton(canvas);\n    this.createEmitter({\n      canvas,\n      x: width / 2,\n      y: height / 2,\n      mainEmitter: true,\n      zone: \"bound\"\n    });\n\n    RAFManager.add(this.renderProton);\n  }\n\n  componentWillUnmount() {\n    try {\n      RAFManager.remove(this.renderProton);\n      this.proton.destroy();\n    } catch (e) {}\n  }\n\n  onResize() {}\n\n  createProton(canvas) {\n    this.proton = new Proton();\n    const renderer = this.createRenderer(canvas);\n    this.proton.addRenderer(renderer);\n  }\n\n  createRenderer(canvas) {\n    const context = canvas.getContext(\"2d\");\n    const renderer = new Proton.CustomRenderer();\n\n    renderer.onProtonUpdate = () => {\n      context.clearRect(0, 0, canvas.width, canvas.height);\n    };\n\n    renderer.onParticleCreated = particle => {\n      particle.data.count = Proton.MathUtil.randomAToB(3, 10, true);\n    };\n\n    renderer.onParticleUpdate = particle => {\n      context.save();\n      context.globalAlpha = particle.alpha;\n      context.fillStyle = particle.color;\n\n      context.translate(particle.p.x, particle.p.y);\n      context.rotate(Proton.MathUtil.degreeTransform(particle.rotation));\n      context.translate(-particle.p.x, -particle.p.y);\n\n      context.beginPath();\n      drawPolygon(particle, particle.data.count);\n\n      context.closePath();\n      context.fill();\n      context.globalAlpha = 1;\n      context.restore();\n    };\n\n    renderer.onParticleDead = particle => {};\n\n    const drawPolygon = (particle, count) => {\n      if (count >= 7) {\n        context.arc(\n          particle.p.x,\n          particle.p.y,\n          particle.radius,\n          0,\n          Math.PI * 2,\n          true\n        );\n      } else {\n        const radius = particle.radius;\n\n        for (let i = 0; i <= count; i++) {\n          let x =\n            particle.p.x +\n            radius * Math.cos((((Math.PI / 180) * 360) / count) * i);\n          let y =\n            particle.p.y +\n            radius * Math.sin((((Math.PI / 180) * 360) / count) * i);\n\n          if (i === 0) context.moveTo(x, y);\n          else context.lineTo(x, y);\n        }\n      }\n    };\n\n    return renderer;\n  }\n\n  createEmitter({\n    mainEmitter,\n    canvas,\n    x,\n    y,\n    radius,\n    color = COLOR,\n    zone = \"dead\",\n    once = \"all\",\n    alpha = 0.85,\n    gravity = 3.5\n  }) {\n    const emitter = this.proton.pool.get(Proton.Emitter);\n\n    if (!emitter.completed) {\n      emitter.rate = new Proton.Rate(\n        this.props.num ? new Proton.Span(this.props.num) : new Proton.Span(4, 9),\n        new Proton.Span(1.6, 2.2)\n      );\n\n      const radiusInit = mainEmitter\n        ? new Proton.Radius(10, 110)\n        : new Proton.Radius(3, radius);\n      emitter.addInitialize(new Proton.Mass(1));\n      emitter.addInitialize(radiusInit);\n      emitter.addInitialize(new Proton.Life(3, 6));\n      emitter.addInitialize(\n        new Proton.Velocity(\n          new Proton.Span(4, 6),\n          new Proton.Span(-90, 90),\n          \"polar\"\n        )\n      );\n\n      emitter.addBehaviour(new Proton.Alpha(alpha, 0.2));\n      emitter.addBehaviour(new Proton.Color(color));\n      emitter.addBehaviour(new Proton.Scale(1, 0.3));\n      emitter.addBehaviour(new Proton.Rotate());\n      emitter.addBehaviour(new Proton.Gravity(gravity));\n\n      emitter.addBehaviour(this.customDeadBehaviour(canvas));\n      emitter.addBehaviour(\n        new Proton.CrossZone(\n          new Proton.RectZone(0, 0, canvas.width, canvas.height),\n          zone\n        )\n      );\n    }\n\n    emitter.p.x = x;\n    emitter.p.y = y;\n    if (once === \"once\") emitter.emit(\"once\");\n    else emitter.emit();\n\n    this.proton.addEmitter(emitter);\n    //this.expireEmitter(emitter);\n  }\n\n  expireEmitter(emitter) {\n    setTimeout(() => {\n      emitter.completed = true;\n      this.proton.pool.expire(emitter);\n      this.proton.removeEmitter(emitter);\n    }, 500);\n  }\n\n  customDeadBehaviour(canvas) {\n    return {\n      initialize: particle => {\n        particle.data = particle.data || {};\n        particle.data.oldRadius = particle.radius;\n        particle.data.emitterCount = 0;\n      },\n      applyBehaviour: particle => {\n        if (particle.radius < 5) return;\n        if (particle.data.emitterCount >= 2) return;\n\n        if (particle.radius <= (1 / 3) * particle.data.oldRadius) {\n          particle.data.emitterCount++;\n          this.createEmitter({\n            canvas,\n            x: particle.p.x,\n            y: particle.p.y,\n            radius: particle.radius * (1 / 2),\n            alpha: 0.5,\n            gravity: 5,\n            color: particle.color,\n            once: \"once\"\n          });\n        }\n      }\n    };\n  }\n\n  renderProton() {\n    this.proton && this.proton.update();\n  }\n\n  render() {\n    return (\n      <Canvas bg={this.props.bg}\n        globalCompositeOperation=\"darker\"\n        onCanvasInited={this.onCanvasInited.bind(this)}\n        onResize={this.onResize.bind(this)}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport Proton from \"proton-engine\";\nimport RAFManager from \"raf-manager\";\nimport Canvas from \"./Canvas.jsx\";\n\nexport default class Fountain extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.colors = [\n      \"#529B88\",\n      \"#CDD180\",\n      \"#FFFA32\",\n      \"#FB6255\",\n      \"#FB4A53\",\n      \"#FF4E50\",\n      \"#F9D423\"\n    ];\n    this.renderProton = this.renderProton.bind(this);\n  }\n\n  componentWillUnmount() {\n    try {\n      RAFManager.remove(this.renderProton);\n      this.proton.destroy();\n    } catch (e) {}\n  }\n\n  onCanvasInited(canvas, width, height) {\n    this.createProton(canvas, width, height);\n    RAFManager.add(this.renderProton);\n  }\n\n  onResize() {}\n\n  createProton(canvas, width, height) {\n    this.proton = new Proton();\n    const emitter = new Proton.Emitter();\n    emitter.rate = new Proton.Rate(\n      this.props.num ? new Proton.Span(this.props.num) : new Proton.Span(4, 8),\n      new Proton.Span(0.1, 0.25)\n    );\n\n    emitter.addInitialize(new Proton.Mass(1));\n    emitter.addInitialize(new Proton.Radius(20, 200));\n    emitter.addInitialize(new Proton.Life(2, 4));\n    emitter.addInitialize(\n      new Proton.Velocity(\n        new Proton.Span(4, 7),\n        new Proton.Span(0, 360),\n        \"polar\"\n      )\n    );\n    emitter.addInitialize(\n      new Proton.Position(new Proton.CircleZone(width / 2, height / 2, 100))\n    );\n\n    emitter.addBehaviour(new Proton.Alpha(1, 0));\n    emitter.addBehaviour(new Proton.Scale(0.2, 1));\n    emitter.addBehaviour(this.createCustomBehaviour());\n    emitter.addBehaviour(new Proton.Color(this.colors, \"random\"));\n    emitter.emit();\n    this.proton.addEmitter(emitter);\n\n    const renderer = new Proton.CanvasRenderer(canvas);\n    this.proton.addRenderer(renderer);\n  }\n\n  createCustomBehaviour() {\n    const f = 10 * 100;\n    return {\n      initialize: function(particle) {\n        particle.f = new Proton.Vector2D(0, 0);\n      },\n      applyBehaviour: particle => {\n        let length = particle.v.length() / 1000;\n        let gradient = particle.v.getGradient();\n        gradient += 3.14 / 2;\n\n        particle.f.x = f * length * Math.cos(gradient);\n        particle.f.y = f * length * Math.sin(gradient);\n        particle.a.add(particle.f);\n      }\n    };\n  }\n\n  renderProton() {\n    this.proton && this.proton.update();\n  }\n\n  render() {\n    return (\n      <Canvas bg={this.props.bg}\n        globalCompositeOperation=\"xor\"\n        onCanvasInited={this.onCanvasInited.bind(this)}\n        onResize={this.onResize.bind(this)}\n      />\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Rand from \"./utils/Rand.js\";\nimport Ball from \"./particles/Ball.jsx\";\nimport Color from \"./particles/Color.jsx\";\nimport Custom from \"./particles/Custom.jsx\";\nimport Lines from \"./particles/Lines.jsx\";\nimport Thick from \"./particles/Thick.jsx\";\nimport Square from \"./particles/Square.jsx\";\nimport Cobweb from \"./particles/Cobweb.jsx\";\nimport Circle from \"./particles/Circle.jsx\";\nimport Tadpole from \"./particles/Tadpole.jsx\";\nimport Polygon from \"./particles/Polygon.jsx\";\nimport Fountain from \"./particles/Fountain.jsx\";\n\nexport default class ParticlesBg extends Component {\n\n  constructor(props) {\n    super(props);\n  }\n\n  getRandom() {\n    const { num, bg, color } = this.props;\n\n    // Code source from here, thanks author\n    // https://github.com/drawcall/Proton/blob/gh-pages/source/src/utils/Rand.js\n    if (!this.random) {\n      this.random = new Rand();\n      this.random.set(0.25, <Color num={num} bg={bg} color={color} />);\n      this.random.set(0.2, <Ball num={num} bg={bg} color={color} />);\n      this.random.set(0.2, <Lines num={num} bg={bg} color={color} />);\n      this.random.set(0.16, <Thick num={num} bg={bg} color={color} />);\n      this.random.set(0.18, <Circle num={num} bg={bg} color={color} />);\n      this.random.set(0.04, <Cobweb num={num} bg={bg} color={color} />);\n      this.random.set(0.1, <Polygon num={num} bg={bg} color={color} />);\n      this.random.set(0.08, <Square num={num} bg={bg} color={color} />);\n      this.random.set(0.18, <Tadpole num={num} bg={bg} color={color} />);\n      this.random.set(0.15, <Fountain num={num} bg={bg} color={color} />);\n    }\n    return this.random.getResult();\n  }\n\n  getBgParticles() {\n    const { type, num, bg, color, config } = this.props;\n\n    let particles;\n    switch (String(type).toLowerCase()) {\n      case \"color\":\n        particles = <Color num={num} bg={bg} color={color} />;\n        break;\n      case \"ball\":\n        particles = <Ball num={num} bg={bg} color={color} />;\n        break;\n      case \"lines\":\n        particles = <Lines num={num} bg={bg} color={color} />;\n        break;\n      case \"thick\":\n        particles = <Thick num={num} bg={bg} color={color} />;\n        break;\n      case \"circle\":\n        particles = <Circle num={num} bg={bg} color={color} />;\n        break;\n      case \"cobweb\":\n        particles = <Cobweb num={num} bg={bg} color={color} />;\n        break;\n      case \"polygon\":\n        particles = <Polygon num={num} bg={bg} color={color} />;\n        break;\n      case \"square\":\n        particles = <Square num={num} bg={bg} color={color} />;\n        break;\n      case \"tadpole\":\n        particles = <Tadpole num={num} bg={bg} color={color} />;\n        break;\n      case \"fountain\":\n        particles = <Fountain num={num} bg={bg} color={color} />;\n        break;\n      case \"custom\":\n        particles = <Custom bg={bg} config={config} />;\n        break;\n      case \"random\":\n        particles = this.getRandom(num);\n        break;\n\n      default:\n        particles = <Color num={num} bg={bg} color={color} />;\n        break;\n    }\n\n    return particles;\n  }\n\n  render() {\n    const particles = this.getBgParticles();\n    return <React.Fragment>{particles}</React.Fragment>;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}